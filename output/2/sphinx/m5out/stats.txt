
---------- Begin Simulation Statistics ----------
simSeconds                                   2.606677                       # Number of seconds simulated (Second)
simTicks                                 2606677408000                       # Number of ticks simulated (Tick)
finalTick                                2606677408000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                  12337.17                       # Real time elapsed on the host (Second)
hostTickRate                                211286507                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    9128620                       # Number of bytes of host memory used (Byte)
simInsts                                   2654428514                       # Number of instructions simulated (Count)
simOps                                     2966721651                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   215157                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     240470                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.dptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.dptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.iptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.iptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.iptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.iptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.iptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.iptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.demandHits::processor.cores.core.data    911409633                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.demandHits::total    911409633                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::processor.cores.core.data    911409633                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::total    911409633                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.demandMisses::processor.cores.core.data     35760129                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.demandMisses::total     35760129                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::processor.cores.core.data     35760129                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::total     35760129                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.demandMissLatency::processor.cores.core.data 773406844145                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMissLatency::total 773406844145                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::processor.cores.core.data 773406844145                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::total 773406844145                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandAccesses::processor.cores.core.data    947169762                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandAccesses::total    947169762                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::processor.cores.core.data    947169762                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::total    947169762                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandMissRate::processor.cores.core.data     0.037755                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMissRate::total     0.037755                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::processor.cores.core.data     0.037755                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::total     0.037755                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::processor.cores.core.data 21627.630150                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::total 21627.630150                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::processor.cores.core.data 21627.630150                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::total 21627.630150                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.blockedCycles::no_mshrs     82812729                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCycles::no_targets      6530981                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCauses::no_mshrs      6750281                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.blockedCauses::no_targets       233028                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.avgBlocked::no_mshrs    12.268042                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.avgBlocked::no_targets    28.026593                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.writebacks::writebacks     21411834                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.writebacks::total     21411834                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::processor.cores.core.data     14347752                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::total     14347752                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::processor.cores.core.data     14347752                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::total     14347752                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::processor.cores.core.data     21412377                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::total     21412377                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::processor.cores.core.data     21412377                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::total     21412377                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::processor.cores.core.data 446788525982                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::total 446788525982                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::processor.cores.core.data 446788525982                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::total 446788525982                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::processor.cores.core.data     0.022607                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::total     0.022607                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::processor.cores.core.data     0.022607                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::total     0.022607                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::processor.cores.core.data 20865.900408                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::total 20865.900408                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::processor.cores.core.data 20865.900408                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::total 20865.900408                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.replacements     21411834                       # number of replacements (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::processor.cores.core.data    575761802                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::total    575761802                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::processor.cores.core.data     23897227                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::total     23897227                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::processor.cores.core.data 543119106000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::total 543119106000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::processor.cores.core.data    599659029                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::total    599659029                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::processor.cores.core.data     0.039851                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::total     0.039851                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::processor.cores.core.data 22727.285722                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::total 22727.285722                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::processor.cores.core.data      7629056                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::total      7629056                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::processor.cores.core.data     16268171                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::total     16268171                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::processor.cores.core.data 344532956000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::total 344532956000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.027129                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::total     0.027129                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 21178.346109                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::total 21178.346109                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.hits::processor.cores.core.data         1428                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::total         1428                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::processor.cores.core.data            8                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::total            8                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::processor.cores.core.data       737000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::total       737000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::processor.cores.core.data         1436                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::total         1436                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::processor.cores.core.data     0.005571                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::total     0.005571                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::processor.cores.core.data        92125                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::total        92125                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::processor.cores.core.data            8                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::total            8                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::processor.cores.core.data       721000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::total       721000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::processor.cores.core.data     0.005571                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::total     0.005571                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::processor.cores.core.data        90125                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::total        90125                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.hits::processor.cores.core.data       567906                       # number of WriteLineReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.hits::total       567906                       # number of WriteLineReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::processor.cores.core.data      1328407                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::total      1328407                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::processor.cores.core.data  28693376734                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::total  28693376734                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::processor.cores.core.data      1896313                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::total      1896313                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::processor.cores.core.data     0.700521                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::total     0.700521                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::processor.cores.core.data 21599.838554                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::total 21599.838554                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::processor.cores.core.data      1328407                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::total      1328407                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::processor.cores.core.data  26036562734                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::total  26036562734                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::processor.cores.core.data     0.700521                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::total     0.700521                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::processor.cores.core.data 19599.838554                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::total 19599.838554                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.hits::processor.cores.core.data    335079925                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.hits::total    335079925                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::processor.cores.core.data     10534495                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::total     10534495                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::processor.cores.core.data 201594361411                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::total 201594361411                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::processor.cores.core.data    345614420                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::total    345614420                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::processor.cores.core.data     0.030480                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::total     0.030480                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::processor.cores.core.data 19136.594722                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::total 19136.594722                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::processor.cores.core.data      6718696                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::total      6718696                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::processor.cores.core.data      3815799                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::total      3815799                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::processor.cores.core.data  76219007248                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::total  76219007248                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.011041                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::total     0.011041                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 19974.586515                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::total 19974.586515                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.tags.tagsInUse   511.992161                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1dcaches.tags.totalRefs    932823507                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.sampledRefs     21412346                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.avgRefs    43.564750                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1dcaches.tags.warmupTick       294000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1dcaches.tags.occupancies::processor.cores.core.data   511.992161                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::processor.cores.core.data     0.999985                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::total     0.999985                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::0           69                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::1          443                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.tagAccesses   1915754742                       # Number of tag accesses (Count)
board.cache_hierarchy.l1dcaches.tags.dataAccesses   1915754742                       # Number of data accesses (Count)
board.cache_hierarchy.l1dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.demandHits::processor.cores.core.inst    992823502                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.demandHits::total    992823502                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.overallHits::processor.cores.core.inst    992823502                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.overallHits::total    992823502                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.demandMisses::processor.cores.core.inst      5225068                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.demandMisses::total      5225068                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::processor.cores.core.inst      5225068                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::total      5225068                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.demandMissLatency::processor.cores.core.inst  85196383857                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMissLatency::total  85196383857                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::processor.cores.core.inst  85196383857                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::total  85196383857                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandAccesses::processor.cores.core.inst    998048570                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandAccesses::total    998048570                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::processor.cores.core.inst    998048570                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::total    998048570                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandMissRate::processor.cores.core.inst     0.005235                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMissRate::total     0.005235                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::processor.cores.core.inst     0.005235                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::total     0.005235                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMissLatency::processor.cores.core.inst 16305.315808                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMissLatency::total 16305.315808                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::processor.cores.core.inst 16305.315808                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::total 16305.315808                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.blockedCycles::no_mshrs        94252                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCauses::no_mshrs         3536                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.avgBlocked::no_mshrs    26.654977                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.writebacks::writebacks      5174577                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.writebacks::total      5174577                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::processor.cores.core.inst        49978                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::total        49978                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::processor.cores.core.inst        49978                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::total        49978                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::processor.cores.core.inst      5175090                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::total      5175090                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::processor.cores.core.inst      5175090                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::total      5175090                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::processor.cores.core.inst  79343729905                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::total  79343729905                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::processor.cores.core.inst  79343729905                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::total  79343729905                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissRate::processor.cores.core.inst     0.005185                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMshrMissRate::total     0.005185                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::processor.cores.core.inst     0.005185                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::total     0.005185                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::processor.cores.core.inst 15331.855080                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::total 15331.855080                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::processor.cores.core.inst 15331.855080                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::total 15331.855080                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.replacements      5174577                       # number of replacements (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::processor.cores.core.inst    992823502                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::total    992823502                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::processor.cores.core.inst      5225068                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::total      5225068                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::processor.cores.core.inst  85196383857                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::total  85196383857                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.accesses::processor.cores.core.inst    998048570                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.accesses::total    998048570                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.missRate::processor.cores.core.inst     0.005235                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.missRate::total     0.005235                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::processor.cores.core.inst 16305.315808                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::total 16305.315808                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::processor.cores.core.inst        49978                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::total        49978                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::processor.cores.core.inst      5175090                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::total      5175090                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::processor.cores.core.inst  79343729905                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::total  79343729905                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.005185                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::total     0.005185                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 15331.855080                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::total 15331.855080                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.tags.tagsInUse   511.944381                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1icaches.tags.totalRefs    997998591                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.sampledRefs      5175089                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.avgRefs   192.846653                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1icaches.tags.warmupTick        90000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1icaches.tags.occupancies::processor.cores.core.inst   511.944381                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::processor.cores.core.inst     0.999891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::total     0.999891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::0           88                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::1          287                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::2            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::3            9                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::4          127                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1icaches.tags.tagAccesses   2001272229                       # Number of tag accesses (Count)
board.cache_hierarchy.l1icaches.tags.dataAccesses   2001272229                       # Number of data accesses (Count)
board.cache_hierarchy.l1icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2buses.transDist::ReadResp     21443031                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::WritebackDirty     11597833                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::WritebackClean     15964588                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::CleanEvict      1680525                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::HardPFReq      7125830                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::HardPFResp           43                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::UpgradeReq           39                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::UpgradeResp           39                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadExReq      3791555                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadExResp      3791555                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadCleanReq      5175090                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadSharedReq     16267942                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::InvalidateReq      1352849                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::InvalidateResp      1352849                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port     15524756                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port     64236647                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktCount::total     79761403                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port    662378624                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port   2654167936                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.pktSize::total   3316546560                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.snoops          9782408                       # Total snoops (Count)
board.cache_hierarchy.l2buses.snoopTraffic     62467392                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2buses.snoopFanout::samples     36369840                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::mean     0.151903                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::stdev     0.358927                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::0     30845154     84.81%     84.81% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::1      5524686     15.19%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::total     36369840                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2buses.reqLayer0.occupancy 106346709098                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.respLayer0.occupancy  15525324942                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.respLayer1.occupancy  61531408970                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.snoopLayer0.occupancy       129139                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.snoopLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.snoop_filter.totRequests     53173886                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitSingleRequests     26586450                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitMultiRequests           76                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.totSnoops      5524610                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitSingleSnoops      5524610                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2caches.demandHits::processor.cores.core.inst      5168440                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.demandHits::processor.cores.core.data     18811289                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.demandHits::total     23979729                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.overallHits::processor.cores.core.inst      5168440                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.overallHits::processor.cores.core.data     18811289                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.overallHits::total     23979729                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.demandMisses::processor.cores.core.inst         6650                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.demandMisses::processor.cores.core.data      1248208                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.demandMisses::total      1254858                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.overallMisses::processor.cores.core.inst         6650                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.overallMisses::processor.cores.core.data      1248208                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.overallMisses::total      1254858                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.demandMissLatency::processor.cores.core.inst    586383000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMissLatency::processor.cores.core.data 110031009000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMissLatency::total 110617392000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::processor.cores.core.inst    586383000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::processor.cores.core.data 110031009000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::total 110617392000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.demandAccesses::processor.cores.core.inst      5175090                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandAccesses::processor.cores.core.data     20059497                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandAccesses::total     25234587                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::processor.cores.core.inst      5175090                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::processor.cores.core.data     20059497                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::total     25234587                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandMissRate::processor.cores.core.inst     0.001285                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMissRate::processor.cores.core.data     0.062225                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMissRate::total     0.049728                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::processor.cores.core.inst     0.001285                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::processor.cores.core.data     0.062225                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::total     0.049728                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.demandAvgMissLatency::processor.cores.core.inst 88177.894737                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMissLatency::processor.cores.core.data 88151.180733                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMissLatency::total 88151.322301                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::processor.cores.core.inst 88177.894737                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::processor.cores.core.data 88151.180733                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::total 88151.322301                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2caches.writebacks::writebacks       976010                       # number of writebacks (Count)
board.cache_hierarchy.l2caches.writebacks::total       976010                       # number of writebacks (Count)
board.cache_hierarchy.l2caches.demandMshrHits::processor.cores.core.data         7310                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2caches.demandMshrHits::total         7310                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2caches.overallMshrHits::processor.cores.core.data         7310                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2caches.overallMshrHits::total         7310                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::processor.cores.core.inst         6650                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::processor.cores.core.data      1240898                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::total      1247548                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::cache_hierarchy.l2caches.prefetcher      6885505                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::processor.cores.core.inst         6650                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::processor.cores.core.data      1240898                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::total      8133053                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMissLatency::processor.cores.core.inst    506592003                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissLatency::processor.cores.core.data  94441916000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissLatency::total  94948508003                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::cache_hierarchy.l2caches.prefetcher  95943301565                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::processor.cores.core.inst    506592003                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::processor.cores.core.data  94441916000                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::total 190891809568                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissRate::processor.cores.core.inst     0.001285                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMshrMissRate::processor.cores.core.data     0.061861                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMshrMissRate::total     0.049438                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::cache_hierarchy.l2caches.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::processor.cores.core.inst     0.001285                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::processor.cores.core.data     0.061861                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::total     0.322298                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::processor.cores.core.inst 76179.248571                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::processor.cores.core.data 76107.718765                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::total 76108.100051                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::cache_hierarchy.l2caches.prefetcher 13934.098017                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::processor.cores.core.inst 76179.248571                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::processor.cores.core.data 76107.718765                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::total 23471.113439                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.replacements      2656535                       # number of replacements (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMisses::cache_hierarchy.l2caches.prefetcher      6885505                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMisses::total      6885505                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissLatency::cache_hierarchy.l2caches.prefetcher  95943301565                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissLatency::total  95943301565                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissRate::cache_hierarchy.l2caches.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2caches.HardPFReq.avgMshrMissLatency::cache_hierarchy.l2caches.prefetcher 13934.098017                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.HardPFReq.avgMshrMissLatency::total 13934.098017                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.hits::processor.cores.core.data      1287508                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2caches.InvalidateReq.hits::total      1287508                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2caches.InvalidateReq.misses::processor.cores.core.data        65341                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.misses::total        65341                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.accesses::processor.cores.core.data      1352849                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.InvalidateReq.accesses::total      1352849                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.InvalidateReq.missRate::processor.cores.core.data     0.048299                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.missRate::total     0.048299                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMisses::processor.cores.core.data        65341                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMisses::total        65341                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissLatency::processor.cores.core.data   1372161000                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissLatency::total   1372161000                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissRate::processor.cores.core.data     0.048299                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissRate::total     0.048299                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.avgMshrMissLatency::processor.cores.core.data        21000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.avgMshrMissLatency::total        21000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.hits::processor.cores.core.inst      5168440                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.hits::total      5168440                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.misses::processor.cores.core.inst         6650                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.misses::total         6650                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.missLatency::processor.cores.core.inst    586383000                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.missLatency::total    586383000                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.accesses::processor.cores.core.inst      5175090                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.accesses::total      5175090                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.missRate::processor.cores.core.inst     0.001285                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.missRate::total     0.001285                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.avgMissLatency::processor.cores.core.inst 88177.894737                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.avgMissLatency::total 88177.894737                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMisses::processor.cores.core.inst         6650                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMisses::total         6650                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissLatency::processor.cores.core.inst    506592003                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissLatency::total    506592003                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissRate::processor.cores.core.inst     0.001285                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissRate::total     0.001285                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.avgMshrMissLatency::processor.cores.core.inst 76179.248571                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.avgMshrMissLatency::total 76179.248571                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.hits::processor.cores.core.data      3618957                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.hits::total      3618957                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.misses::processor.cores.core.data       172598                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.misses::total       172598                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.missLatency::processor.cores.core.data  15444739000                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.missLatency::total  15444739000                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.accesses::processor.cores.core.data      3791555                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadExReq.accesses::total      3791555                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadExReq.missRate::processor.cores.core.data     0.045522                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.missRate::total     0.045522                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.avgMissLatency::processor.cores.core.data 89483.881621                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.avgMissLatency::total 89483.881621                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.mshrHits::processor.cores.core.data         6061                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrHits::total         6061                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMisses::processor.cores.core.data       166537                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMisses::total       166537                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissLatency::processor.cores.core.data  12821416000                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissLatency::total  12821416000                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissRate::processor.cores.core.data     0.043923                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissRate::total     0.043923                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.avgMshrMissLatency::processor.cores.core.data 76988.392970                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.avgMshrMissLatency::total 76988.392970                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.hits::processor.cores.core.data     15192332                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.hits::total     15192332                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.misses::processor.cores.core.data      1075610                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.misses::total      1075610                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.missLatency::processor.cores.core.data  94586270000                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.missLatency::total  94586270000                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.accesses::processor.cores.core.data     16267942                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.accesses::total     16267942                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.missRate::processor.cores.core.data     0.066118                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.missRate::total     0.066118                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.avgMissLatency::processor.cores.core.data 87937.328586                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.avgMissLatency::total 87937.328586                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.mshrHits::processor.cores.core.data         1249                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrHits::total         1249                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMisses::processor.cores.core.data      1074361                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMisses::total      1074361                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissLatency::processor.cores.core.data  81620500000                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissLatency::total  81620500000                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.066042                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissRate::total     0.066042                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 75971.205209                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.avgMshrMissLatency::total 75971.205209                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.UpgradeReq.misses::processor.cores.core.data           39                       # number of UpgradeReq misses (Count)
board.cache_hierarchy.l2caches.UpgradeReq.misses::total           39                       # number of UpgradeReq misses (Count)
board.cache_hierarchy.l2caches.UpgradeReq.missLatency::processor.cores.core.data      1287000                       # number of UpgradeReq miss ticks (Tick)
board.cache_hierarchy.l2caches.UpgradeReq.missLatency::total      1287000                       # number of UpgradeReq miss ticks (Tick)
board.cache_hierarchy.l2caches.UpgradeReq.accesses::processor.cores.core.data           39                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.UpgradeReq.accesses::total           39                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.UpgradeReq.missRate::processor.cores.core.data            1                       # miss rate for UpgradeReq accesses (Ratio)
board.cache_hierarchy.l2caches.UpgradeReq.missRate::total            1                       # miss rate for UpgradeReq accesses (Ratio)
board.cache_hierarchy.l2caches.UpgradeReq.avgMissLatency::processor.cores.core.data        33000                       # average UpgradeReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.UpgradeReq.avgMissLatency::total        33000                       # average UpgradeReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.UpgradeReq.mshrMisses::processor.cores.core.data           39                       # number of UpgradeReq MSHR misses (Count)
board.cache_hierarchy.l2caches.UpgradeReq.mshrMisses::total           39                       # number of UpgradeReq MSHR misses (Count)
board.cache_hierarchy.l2caches.UpgradeReq.mshrMissLatency::processor.cores.core.data       819000                       # number of UpgradeReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.UpgradeReq.mshrMissLatency::total       819000                       # number of UpgradeReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.UpgradeReq.mshrMissRate::processor.cores.core.data            1                       # mshr miss rate for UpgradeReq accesses (Ratio)
board.cache_hierarchy.l2caches.UpgradeReq.mshrMissRate::total            1                       # mshr miss rate for UpgradeReq accesses (Ratio)
board.cache_hierarchy.l2caches.UpgradeReq.avgMshrMissLatency::processor.cores.core.data        21000                       # average UpgradeReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.UpgradeReq.avgMshrMissLatency::total        21000                       # average UpgradeReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.WritebackClean.hits::writebacks     15964496                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2caches.WritebackClean.hits::total     15964496                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2caches.WritebackClean.accesses::writebacks     15964496                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackClean.accesses::total     15964496                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackDirty.hits::writebacks     10621823                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2caches.WritebackDirty.hits::total     10621823                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2caches.WritebackDirty.accesses::writebacks     10621823                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackDirty.accesses::total     10621823                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2caches.prefetcher.demandMshrMisses      1247548                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2caches.prefetcher.pfIssued     59058142                       # number of hwpf issued (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUnused      1353428                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUseful           43                       # number of useful prefetch (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2caches.prefetcher.accuracy     0.000001                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2caches.prefetcher.coverage     0.000034                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInCache     51697899                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInMSHR       474583                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInWB          155                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2caches.prefetcher.pfLate     52172637                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2caches.prefetcher.pfIdentified     59132102                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2caches.prefetcher.pfBufferHit        54416                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2caches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2caches.prefetcher.pfRemovedDemand        14912                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2caches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2caches.prefetcher.pfSpanPage      7860162                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2caches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2caches.tags.tagsInUse 15874.008064                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2caches.tags.totalRefs     53214555                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2caches.tags.sampledRefs     27947225                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2caches.tags.avgRefs     1.904109                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2caches.tags.warmupTick      1222000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2caches.tags.occupancies::writebacks 15627.937552                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2caches.tags.occupancies::cache_hierarchy.l2caches.prefetcher   246.070512                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::writebacks     0.953854                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::cache_hierarchy.l2caches.prefetcher     0.015019                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::total     0.968873                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.occupanciesTaskId::1022          175                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2caches.tags.occupanciesTaskId::1024        15971                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1022::1           26                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1022::2           60                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1022::3           18                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1022::4           71                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::0          156                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::1         1476                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::2         4639                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::3         6519                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::4         3181                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ratioOccsTaskId::1022     0.010681                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2caches.tags.ratioOccsTaskId::1024     0.974792                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2caches.tags.tagAccesses    878728185                       # Number of tag accesses (Count)
board.cache_hierarchy.l2caches.tags.dataAccesses    878728185                       # Number of data accesses (Count)
board.cache_hierarchy.l2caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp      2441923                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty       976010                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::CleanEvict      1680525                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::UpgradeReq           43                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq       166533                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp       166533                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadCleanReq      2441924                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::InvalidateReq        65341                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2caches.mem_side_port::board.memory.mem_ctrl.port      7938832                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2caches.mem_side_port::total      7938832                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total      7938832                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2caches.mem_side_port::board.memory.mem_ctrl.port    229405824                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2caches.mem_side_port::total    229405824                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total    229405824                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples      2673841                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0      2673841    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total      2673841                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy   7388135113                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy   6207824758                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests      5330376                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests      2656670                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                           1000                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples    975458.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l2caches.prefetcher::samples   1346815.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples      6650.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples   1224118.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.171258194500                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds        54595                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds        54595                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState        6496411                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState        924277                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                2608457                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                976010                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts              2608457                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts              976010                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ             30874                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts              552                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.17                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 24.30                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6          2608457                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6          976010                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0            1987623                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1             314462                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2              58513                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3              45010                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4              40132                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5              36715                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6              33116                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7              30196                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8              24310                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9               3930                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10              1348                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11              1038                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12               705                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13               485                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15             33235                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16             35611                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17             45470                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18             49281                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19             51388                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20             53258                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21             53922                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22             54566                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23             55484                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24             57103                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25             57386                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26             59297                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27             60098                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28             60627                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29             65241                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30             61438                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31             58252                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32             56756                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33              2157                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34              1347                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35               859                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36               524                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37               407                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38               328                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39               262                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40               227                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41               193                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42               146                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43               123                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                99                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                73                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                53                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                51                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                36                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                31                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                30                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                17                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                13                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples        54595                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    47.211430                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev   107.750973                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-511        54569     99.95%     99.95% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::512-1023           11      0.02%     99.97% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::1024-1535            6      0.01%     99.98% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::1536-2047            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::2048-2559            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::2560-3071            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::3072-3583            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::5120-5631            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::5632-6143            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::9216-9727            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::11264-11775            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::12800-13311            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total        54595                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples        54595                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    17.866691                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    17.663877                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     3.947237                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16-19        50925     93.28%     93.28% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::20-23         2422      4.44%     97.71% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::24-27          652      1.19%     98.91% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::28-31          161      0.29%     99.20% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::32-35          116      0.21%     99.42% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::36-39           59      0.11%     99.52% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::40-43           42      0.08%     99.60% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::44-47           30      0.05%     99.66% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::48-51           14      0.03%     99.68% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::52-55           26      0.05%     99.73% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::56-59           24      0.04%     99.77% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::60-63           16      0.03%     99.80% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::64-67           14      0.03%     99.83% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::68-71           12      0.02%     99.85% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::72-75           15      0.03%     99.88% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::76-79            7      0.01%     99.89% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::80-83           14      0.03%     99.92% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::84-87            9      0.02%     99.93% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::88-91           12      0.02%     99.95% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::92-95            4      0.01%     99.96% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::96-99            4      0.01%     99.97% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::100-103            2      0.00%     99.97% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::104-107            8      0.01%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::108-111            3      0.01%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::112-115            3      0.01%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::128-131            1      0.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total        54595                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ            1975936                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys          166941248                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys        62464640                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         64043693.12736991                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         23963318.13376425                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap             2606677394000                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                727214.78                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l2caches.prefetcher     86196160                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst       425600                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data     78343552                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks     62427648                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l2caches.prefetcher 33067444.301109313965                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 163272.984487384645                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 30054947.251838844270                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 23949126.887894522399                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l2caches.prefetcher      1360913                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst         6650                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data      1240894                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks       976010                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l2caches.prefetcher  53415088237                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst    218084764                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data  40751525972                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks 60687503979211                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l2caches.prefetcher     39249.45                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     32794.70                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     32840.46                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks  62179182.57                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l2caches.prefetcher     87098432                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst       425536                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data     79417216                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total    166941184                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst       425536                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total       425536                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::writebacks     62464640                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total     62464640                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l2caches.prefetcher      1360913                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst         6649                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data      1240894                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total      2608456                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::writebacks       976010                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total       976010                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l2caches.prefetcher     33413583                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst       163248                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data     30466837                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total     64043669                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst       163248                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total       163248                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::writebacks     23963318                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     23963318                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::writebacks     23963318                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l2caches.prefetcher     33413583                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst       163248                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data     30466837                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total     88006987                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts         2577583                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts         975432                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0       156879                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1       170555                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2       152207                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3       187590                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4       168333                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5       157209                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6       149489                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7       148696                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8       173033                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9       183739                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10       153069                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11       169483                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12       164262                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13       148924                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14       148375                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15       145740                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0        58727                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1        57785                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2        61346                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3        66260                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4        58688                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5        56684                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6        57136                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7        60989                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8        62365                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9        63640                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10        61882                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11        66394                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12        66859                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13        60847                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14        58097                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15        57733                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat        46055017723                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat      12887915000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat   94384698973                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           17867.52                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      36617.52                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits        1631606                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits        289467                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        63.30                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        29.68                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples      1631933                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   139.338505                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean    96.108723                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   184.058676                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127      1102654     67.57%     67.57% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255       333331     20.43%     87.99% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383        65934      4.04%     92.03% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511        30513      1.87%     93.90% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639        28505      1.75%     95.65% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767        19188      1.18%     96.83% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895        12049      0.74%     97.56% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023         8957      0.55%     98.11% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151        30802      1.89%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total      1631933                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead    164965312                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten     62427648                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW          63.285665                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          23.949127                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.68                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.49                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.19                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          54.07                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy   5803077840                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy   3084397635                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy   9217440120                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy   2493150300                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 205768564560.000031                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy 504826166940                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy 575847352800                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy 1307040150195                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   501.419986                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE 1491729243995                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF  87042540000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT 1027905624005                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy   5848988040                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy   3108788100                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy   9186502500                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy   2598604740                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 205768564560.000031                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy 490842413370                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy 587623145280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy 1304977006590                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   500.628502                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE 1522485653983                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF  87042540000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT 997149214017                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles       2606677409                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.978598                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               1.021870                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded      3161858257                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded         7915                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued     3114685296                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued     17941974                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined    195144520                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined    160673459                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved         1198                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples   2606093996                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.195155                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.166773                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0   1030188333     39.53%     39.53% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1    532174000     20.42%     59.95% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2    592653294     22.74%     82.69% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3    407148873     15.62%     98.31% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4     43889396      1.68%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5        40095      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            5      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total   2606093996                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu    385211440     50.21%     50.21% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult       349579      0.05%     50.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv      2510909      0.33%     50.59% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd           83      0.00%     50.59% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp       272540      0.04%     50.62% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt       409124      0.05%     50.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult       278629      0.04%     50.71% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc        66799      0.01%     50.72% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv          141      0.00%     50.72% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc       256819      0.03%     50.75% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     50.75% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     50.75% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     50.75% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     50.75% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            7      0.00%     50.75% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     50.75% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc       123805      0.02%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     50.77% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead    215848396     28.14%     78.91% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite    161831518     21.09%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass      1443181      0.05%      0.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu   1899350722     60.98%     61.03% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult      7618328      0.24%     61.27% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv      1340459      0.04%     61.31% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd     21578829      0.69%     62.01% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp     11800090      0.38%     62.39% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt     37876745      1.22%     63.60% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult     23193859      0.74%     64.35% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc     32028622      1.03%     65.38% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv      1135788      0.04%     65.41% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc     16365958      0.53%     65.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt        12800      0.00%     65.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            3      0.00%     65.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     65.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu      1365123      0.04%     65.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp      6118543      0.20%     66.18% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt         9199      0.00%     66.18% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc     19381263      0.62%     66.80% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     66.80% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     66.80% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     66.80% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift      3578962      0.11%     66.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     66.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     66.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     66.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd     16298496      0.52%     67.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu      8149248      0.26%     67.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     67.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     67.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv      1810944      0.06%     67.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     67.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult      8149248      0.26%     68.02% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc     16298496      0.52%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     68.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead    625382497     20.08%     88.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite    354397893     11.38%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total   3114685296                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.194887                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy           767159789                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.246304                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads   8689907239                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites   2914602214                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses   2642745853                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads    930659112                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites    442418255                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses    420955180                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses   3382674997                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses    497726907                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts     19051936                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled          305290                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles          583413                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads    608628423                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores    358661677                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads      6373249                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores      4099625                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return     33077372      5.88%      5.88% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect     29418750      5.23%     11.10% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect      4611712      0.82%     11.92% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond    449999872     79.93%     91.85% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond     39772742      7.06%     98.92% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     98.92% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond      6107897      1.08%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total    562988345                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return      4330085      4.62%      4.62% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect      4034413      4.30%      8.92% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect      1248755      1.33%     10.25% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond     76755131     81.83%     92.08% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond      6617803      7.06%     99.13% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     99.13% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond       813222      0.87%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total     93799409                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return          110      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect       775775      5.57%      5.57% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect          287      0.00%      5.57% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond     12375846     88.87%     94.44% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond       772292      5.55%     99.99% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     99.99% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond         1762      0.01%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total     13926072                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return     28747287      6.13%      6.13% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect     25384337      5.41%     11.54% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect      3362957      0.72%     12.25% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond    373244741     79.55%     91.81% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond     33154939      7.07%     98.87% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.87% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond      5294675      1.13%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total    469188936                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return           69      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect       774717      5.65%      5.65% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect          282      0.00%      5.65% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond     12175697     88.77%     94.42% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond       763085      5.56%     99.99% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     99.99% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond         1633      0.01%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total     13715483                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget    238559786     42.37%     42.37% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB    280669746     49.85%     92.23% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS     33077371      5.88%     98.10% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect     10681442      1.90%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total    562988345                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch      8385038     60.21%     60.21% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return      5540449     39.78%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect          110      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect          475      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total     13926072                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted    449999872                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken    214972080                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect     13926072                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss      2856433                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted      8385623                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted      5540449                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups    562988345                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates      8383464                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits    396014343                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.703415                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted      2870836                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups     10719609                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits     10681442                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses        38167                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return     33077372      5.88%      5.88% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect     29418750      5.23%     11.10% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect      4611712      0.82%     11.92% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond    449999872     79.93%     91.85% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond     39772742      7.06%     98.92% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     98.92% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond      6107897      1.08%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total    562988345                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return     33077372     19.81%     19.81% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect       912059      0.55%     20.36% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect      4611712      2.76%     23.12% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond    121121274     72.54%     95.66% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond      1143688      0.68%     96.34% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     96.34% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond      6107897      3.66%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total    166974002                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect       775775      9.25%      9.25% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      9.25% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond      6835397     81.53%     90.79% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond       772292      9.21%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total      8383464                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect       775775      9.25%      9.25% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      9.25% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond      6835397     81.53%     90.79% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond       772292      9.21%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total      8383464                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups     10719609                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits     10681442                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses        38167                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords         2049                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords     10721658                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            1                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes     38360547                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops     38360540                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes      9613253                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used     28747287                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct     28747218                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect           69                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts    174111122                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls         6717                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts     12378255                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples   2578643624                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     1.154086                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.858798                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0   1359351726     52.72%     52.72% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1    589008772     22.84%     75.56% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2    258854270     10.04%     85.60% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3    109767004      4.26%     89.85% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4     79428540      3.08%     92.93% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5     42964581      1.67%     94.60% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6     37247290      1.44%     96.04% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7     32232923      1.25%     97.29% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8     69788518      2.71%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total   2578643624                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars         1422                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls     28747294                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass      1442875      0.05%      0.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu   1826980635     61.39%     61.44% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult      6719512      0.23%     61.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv      1260816      0.04%     61.71% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd     20929972      0.70%     62.41% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp     11715909      0.39%     62.80% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt     36928144      1.24%     64.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult     23186744      0.78%     64.82% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc     32028619      1.08%     65.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv      1135784      0.04%     65.94% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc     15593336      0.52%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt        12800      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            1      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu      1365037      0.05%     66.51% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp      4805721      0.16%     66.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt         7075      0.00%     66.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc     19367613      0.65%     67.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     67.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     67.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     67.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift      2823868      0.09%     67.42% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     67.42% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     67.42% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     67.42% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd     16298496      0.55%     67.96% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu      8149248      0.27%     68.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     68.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     68.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv      1810944      0.06%     68.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     68.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult      8149248      0.27%     68.57% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc     16298496      0.55%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     69.12% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead    572206384     19.23%     88.35% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite    346760457     11.65%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total   2975977734                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples     69788518                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts   2663684597                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps   2975977734                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP   2654428514                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP   2966721651                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.978598                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     1.021870                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs    918966841                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts   2454718480                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts    572206384                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts    346759021                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts    415514803                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass      1442875      0.05%      0.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu   1826980635     61.39%     61.44% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult      6719512      0.23%     61.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv      1260816      0.04%     61.71% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd     20929972      0.70%     62.41% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp     11715909      0.39%     62.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt     36928144      1.24%     64.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult     23186744      0.78%     64.82% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc     32028619      1.08%     65.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv      1135784      0.04%     65.94% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc     15593336      0.52%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt        12800      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            1      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu      1365037      0.05%     66.51% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp      4805721      0.16%     66.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt         7075      0.00%     66.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc     19367613      0.65%     67.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     67.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     67.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     67.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift      2823868      0.09%     67.42% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     67.42% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     67.42% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     67.42% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd     16298496      0.55%     67.96% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu      8149248      0.27%     68.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     68.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     68.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv      1810944      0.06%     68.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     68.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult      8149248      0.27%     68.57% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc     16298496      0.55%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     69.12% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead    572206384     19.23%     88.35% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite    346760457     11.65%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total   2975977734                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl    469188936                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl    431784017                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl     37404919                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl    373244741                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl     95944195                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall     28747294                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn     28747287                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles    238870460                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles   1070894047                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles   1051481675                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles    232447722                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles     12400092                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved    261121955                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred      1548718                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts   3241404776                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts     49457363                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts   3095633360                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop      9706858                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches    484729423                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts    619992991                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts    352614156                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.187578                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads   1072302858                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites   1067146439                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads   3363281779                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites   1668723793                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs    972607147                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads   1343664991                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites    176319273                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecPredRegReads       944156                       # Number of times the predicate registers were read (Count)
board.processor.cores.core.executeStats0.numVecPredRegWrites       309159                       # Number of times the predicate registers were written (Count)
board.processor.cores.core.executeStats0.numVecRegReads    499747747                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numVecRegWrites    318298487                       # Number of times the vector registers were written (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches    324428559                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles    2503354865                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles     27896318                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles         2077                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles         3394                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.icacheWaitRetryStallCycles         5257                       # Number of stall cycles due to full MSHR (Cycle)
board.processor.cores.core.fetch.cacheLines    998048600                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes       366724                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples   2606093996                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.338958                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.249876                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0    952954299     36.57%     36.57% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1    607512302     23.31%     59.88% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2    254943772      9.78%     69.66% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3    790683623     30.34%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            3                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total   2606093996                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts   3133076264                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.201942                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches    562988345                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.215979                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles     88780244                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles     12400092                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles     18604904                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles      6334416                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts   3171573030                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts    608628423                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts    358661677                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts         7907                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents        39104                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents      6257108                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents         9863                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect      6360969                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect      7604149                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts     13965118                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit   3064562169                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount   3063701033                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst   1604354364                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst   2847287700                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        1.175328                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.563468                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads      3623613                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads     36422039                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses          860                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation         9863                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores     11901220                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads     10092430                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache      4713170                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples    572206384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     5.241477                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     7.103664                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9    539493700     94.28%     94.28% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19     10730472      1.88%     96.16% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29     18293941      3.20%     99.36% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39       735779      0.13%     99.48% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49       425465      0.07%     99.56% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59       149756      0.03%     99.58% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69       211366      0.04%     99.62% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79       396362      0.07%     99.69% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89       830006      0.15%     99.84% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99       566383      0.10%     99.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109       157199      0.03%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119        52822      0.01%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129        28300      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139        24093      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149        14455      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159        10553      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169         7783      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179         7599      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189         7726      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199         6008      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209         5874      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219         3963      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229         3250      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239         2880      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249         2910      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259         2619      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269         2697      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279         3095      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289         3484      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299         3579      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows        22265      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          629                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total    572206384                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb           16                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb           16                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb           16                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb           16                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb           16                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 2606677408000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles     12400092                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles    371820970                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles    720133196                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles     80286436                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles   1108580898                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles    312872404                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts   3188876619                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.squashedInsts     19198684                       # Number of squashed instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents     47900209                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents      4826275                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.LQFullEvents     11121489                       # Number of times rename has blocked due to LQ full (Count)
board.processor.cores.core.rename.SQFullEvents     27636268                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.fullRegistersEvents    126511759                       # Number of times there has been no free registers (Count)
board.processor.cores.core.rename.renamedOperands   3685453673                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups   6352153027                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups   3443744875                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups    505622217                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.vecPredLookups       618352                       # Number of vector predicate rename lookups (Count)
board.processor.cores.core.rename.committedMaps   3424026789                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps    261426884                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing      6224053                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing         3919                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts    512981269                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads       5658780110                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes      6327648277                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts   2654428514                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps   2966721651                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls         3838                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
