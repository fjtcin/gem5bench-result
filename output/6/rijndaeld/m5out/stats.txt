
---------- Begin Simulation Statistics ----------
simSeconds                                   0.130240                       # Number of seconds simulated (Second)
simTicks                                 130239586000                       # Number of ticks simulated (Tick)
finalTick                                130239586000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                    761.21                       # Real time elapsed on the host (Second)
hostTickRate                                171094357                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    8615944                       # Number of bytes of host memory used (Byte)
simInsts                                    241386404                       # Number of instructions simulated (Count)
simOps                                      258684727                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   317107                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     339831                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.dptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.dptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.iptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.iptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.iptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.iptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.iptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.iptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.demandHits::processor.cores.core.data     80445889                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.demandHits::total     80445889                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::processor.cores.core.data     80445889                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::total     80445889                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.demandMisses::processor.cores.core.data      1188172                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.demandMisses::total      1188172                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::processor.cores.core.data      1188172                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::total      1188172                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.demandMissLatency::processor.cores.core.data  21432478963                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMissLatency::total  21432478963                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::processor.cores.core.data  21432478963                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::total  21432478963                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandAccesses::processor.cores.core.data     81634061                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandAccesses::total     81634061                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::processor.cores.core.data     81634061                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::total     81634061                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandMissRate::processor.cores.core.data     0.014555                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMissRate::total     0.014555                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::processor.cores.core.data     0.014555                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::total     0.014555                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::processor.cores.core.data 18038.195617                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::total 18038.195617                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::processor.cores.core.data 18038.195617                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::total 18038.195617                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.blockedCycles::no_mshrs         1895                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCycles::no_targets         1977                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCauses::no_mshrs          206                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.blockedCauses::no_targets           44                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.avgBlocked::no_mshrs     9.199029                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.avgBlocked::no_targets    44.931818                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.writebacks::writebacks       999894                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.writebacks::total       999894                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::processor.cores.core.data       187768                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::total       187768                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::processor.cores.core.data       187768                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::total       187768                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::processor.cores.core.data      1000404                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::total      1000404                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::processor.cores.core.data      1000404                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::total      1000404                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::processor.cores.core.data  16430231963                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::total  16430231963                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::processor.cores.core.data  16430231963                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::total  16430231963                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::processor.cores.core.data     0.012255                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::total     0.012255                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::processor.cores.core.data     0.012255                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::total     0.012255                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::processor.cores.core.data 16423.596830                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::total 16423.596830                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::processor.cores.core.data 16423.596830                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::total 16423.596830                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.replacements       999894                       # number of replacements (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::processor.cores.core.data            4                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::total            4                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::processor.cores.core.data            1                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::total            1                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::processor.cores.core.data        79000                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::total        79000                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::processor.cores.core.data            5                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::total            5                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::processor.cores.core.data     0.200000                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::total     0.200000                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::processor.cores.core.data        79000                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::total        79000                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::processor.cores.core.data            1                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::total            1                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::processor.cores.core.data        77000                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::total        77000                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::processor.cores.core.data     0.200000                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::total     0.200000                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::processor.cores.core.data        77000                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::total        77000                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.hits::processor.cores.core.data     67896841                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::total     67896841                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::processor.cores.core.data      1062545                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::total      1062545                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::processor.cores.core.data  19127132000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::total  19127132000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::processor.cores.core.data     68959386                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::total     68959386                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::processor.cores.core.data     0.015408                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::total     0.015408                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::processor.cores.core.data 18001.244183                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::total 18001.244183                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::processor.cores.core.data       140864                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::total       140864                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::processor.cores.core.data       921681                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::total       921681                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::processor.cores.core.data  15139865000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::total  15139865000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.013366                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::total     0.013366                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 16426.361181                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::total 16426.361181                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::processor.cores.core.data            4                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::total            4                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::processor.cores.core.data            4                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::total            4                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::processor.cores.core.data           15                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::total           15                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::processor.cores.core.data            2                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::total            2                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::processor.cores.core.data        36000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::total        36000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::processor.cores.core.data           17                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::total           17                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::processor.cores.core.data     0.117647                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::total     0.117647                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::processor.cores.core.data        18000                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::total        18000                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::processor.cores.core.data            2                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::total            2                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::processor.cores.core.data        32000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::total        32000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::processor.cores.core.data     0.117647                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::total     0.117647                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::processor.cores.core.data        16000                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::total        16000                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::processor.cores.core.data            9                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::total            9                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::processor.cores.core.data       357999                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::total       357999                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::processor.cores.core.data            9                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::total            9                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::processor.cores.core.data            1                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::total            1                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::processor.cores.core.data 39777.666667                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::total 39777.666667                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::processor.cores.core.data            9                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::total            9                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::processor.cores.core.data       339999                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::total       339999                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::processor.cores.core.data            1                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::total            1                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::processor.cores.core.data 37777.666667                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::total 37777.666667                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.hits::processor.cores.core.data     12549048                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.hits::total     12549048                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::processor.cores.core.data       125618                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::total       125618                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::processor.cores.core.data   2304988964                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::total   2304988964                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::processor.cores.core.data     12674666                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::total     12674666                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::processor.cores.core.data     0.009911                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::total     0.009911                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::processor.cores.core.data 18349.193300                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::total 18349.193300                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::processor.cores.core.data        46904                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::total        46904                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::processor.cores.core.data        78714                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::total        78714                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::processor.cores.core.data   1290026964                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::total   1290026964                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.006210                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::total     0.006210                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 16388.786798                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::total 16388.786798                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.tags.tagsInUse   511.842436                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1dcaches.tags.totalRefs     81446319                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.sampledRefs      1000406                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.avgRefs    81.413265                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1dcaches.tags.warmupTick       199000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1dcaches.tags.occupancies::processor.cores.core.data   511.842436                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::processor.cores.core.data     0.999692                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::total     0.999692                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::0           44                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::1           67                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::2           99                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::3            5                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::4          297                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.tagAccesses    164268580                       # Number of tag accesses (Count)
board.cache_hierarchy.l1dcaches.tags.dataAccesses    164268580                       # Number of data accesses (Count)
board.cache_hierarchy.l1dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.demandHits::processor.cores.core.inst     64465586                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.demandHits::total     64465586                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.overallHits::processor.cores.core.inst     64465586                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.overallHits::total     64465586                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.demandMisses::processor.cores.core.inst          814                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.demandMisses::total          814                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::processor.cores.core.inst          814                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::total          814                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.demandMissLatency::processor.cores.core.inst     62510981                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMissLatency::total     62510981                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::processor.cores.core.inst     62510981                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::total     62510981                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandAccesses::processor.cores.core.inst     64466400                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandAccesses::total     64466400                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::processor.cores.core.inst     64466400                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::total     64466400                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandMissRate::processor.cores.core.inst     0.000013                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMissRate::total     0.000013                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::processor.cores.core.inst     0.000013                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::total     0.000013                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMissLatency::processor.cores.core.inst 76794.816953                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMissLatency::total 76794.816953                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::processor.cores.core.inst 76794.816953                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::total 76794.816953                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.blockedCycles::no_mshrs        10775                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCauses::no_mshrs          188                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.avgBlocked::no_mshrs    57.313830                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.writebacks::writebacks          229                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.writebacks::total          229                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::processor.cores.core.inst          125                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::total          125                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::processor.cores.core.inst          125                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::total          125                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::processor.cores.core.inst          689                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::total          689                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::processor.cores.core.inst          689                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::total          689                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::processor.cores.core.inst     55895982                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::total     55895982                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::processor.cores.core.inst     55895982                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::total     55895982                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissRate::processor.cores.core.inst     0.000011                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMshrMissRate::total     0.000011                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::processor.cores.core.inst     0.000011                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::total     0.000011                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::processor.cores.core.inst 81126.243832                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::total 81126.243832                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::processor.cores.core.inst 81126.243832                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::total 81126.243832                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.replacements          229                       # number of replacements (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::processor.cores.core.inst     64465586                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::total     64465586                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::processor.cores.core.inst          814                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::total          814                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::processor.cores.core.inst     62510981                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::total     62510981                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.accesses::processor.cores.core.inst     64466400                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.accesses::total     64466400                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.missRate::processor.cores.core.inst     0.000013                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.missRate::total     0.000013                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::processor.cores.core.inst 76794.816953                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::total 76794.816953                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::processor.cores.core.inst          125                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::total          125                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::processor.cores.core.inst          689                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::total          689                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::processor.cores.core.inst     55895982                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::total     55895982                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.000011                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::total     0.000011                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 81126.243832                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::total 81126.243832                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.tags.tagsInUse   424.811937                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1icaches.tags.totalRefs     64466275                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.sampledRefs          689                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.avgRefs 93564.985486                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1icaches.tags.warmupTick        90000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1icaches.tags.occupancies::processor.cores.core.inst   424.811937                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::processor.cores.core.inst     0.829711                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::total     0.829711                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.occupanciesTaskId::1024          459                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::0          124                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::1            6                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::4          329                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ratioOccsTaskId::1024     0.896484                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1icaches.tags.tagAccesses    128933489                       # Number of tag accesses (Count)
board.cache_hierarchy.l1icaches.tags.dataAccesses    128933489                       # Number of data accesses (Count)
board.cache_hierarchy.l1icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2buses.transDist::ReadResp       922371                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::WritebackDirty       238756                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::WritebackClean       761367                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::HardPFReq         5147                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::UpgradeReq            1                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::UpgradeResp            1                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadExReq        78683                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadExResp        78683                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadCleanReq          689                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadSharedReq       921682                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::InvalidateReq           41                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::InvalidateResp           41                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port         1607                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port      3000708                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktCount::total      3002315                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port        58752                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port    128016576                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.pktSize::total    128075328                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.snoops             5147                       # Total snoops (Count)
board.cache_hierarchy.l2buses.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2buses.snoopFanout::samples      1006243                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::mean     0.005254                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::stdev     0.072295                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::0      1000956     99.47%     99.47% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::1         5287      0.53%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::total      1006243                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2buses.reqLayer0.occupancy   4001465000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.respLayer0.occupancy      2067000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.respLayer1.occupancy   3001137000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.snoop_filter.totRequests      2001219                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitSingleRequests      1000124                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitMultiRequests          499                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.totSnoops         4787                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitSingleSnoops         4787                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2caches.demandHits::processor.cores.core.inst           28                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.demandHits::processor.cores.core.data       999033                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.demandHits::total       999061                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.overallHits::processor.cores.core.inst           28                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.overallHits::processor.cores.core.data       999033                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.overallHits::total       999061                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.demandMisses::processor.cores.core.inst          661                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.demandMisses::processor.cores.core.data         1332                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.demandMisses::total         1993                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.overallMisses::processor.cores.core.inst          661                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.overallMisses::processor.cores.core.data         1332                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.overallMisses::total         1993                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.demandMissLatency::processor.cores.core.inst     54091000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMissLatency::processor.cores.core.data    109606000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMissLatency::total    163697000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::processor.cores.core.inst     54091000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::processor.cores.core.data    109606000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::total    163697000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.demandAccesses::processor.cores.core.inst          689                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandAccesses::processor.cores.core.data      1000365                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandAccesses::total      1001054                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::processor.cores.core.inst          689                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::processor.cores.core.data      1000365                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::total      1001054                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandMissRate::processor.cores.core.inst     0.959361                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMissRate::processor.cores.core.data     0.001332                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMissRate::total     0.001991                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::processor.cores.core.inst     0.959361                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::processor.cores.core.data     0.001332                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::total     0.001991                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.demandAvgMissLatency::processor.cores.core.inst 81832.072617                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMissLatency::processor.cores.core.data 82286.786787                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMissLatency::total 82135.975916                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::processor.cores.core.inst 81832.072617                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::processor.cores.core.data 82286.786787                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::total 82135.975916                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2caches.demandMshrMisses::processor.cores.core.inst          661                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::processor.cores.core.data         1332                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::total         1993                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::cache_hierarchy.l2caches.prefetcher         5017                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::processor.cores.core.inst          661                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::processor.cores.core.data         1332                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::total         7010                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMissLatency::processor.cores.core.inst     46159000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissLatency::processor.cores.core.data     93622000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissLatency::total    139781000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::cache_hierarchy.l2caches.prefetcher     15707228                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::processor.cores.core.inst     46159000                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::processor.cores.core.data     93622000                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::total    155488228                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissRate::processor.cores.core.inst     0.959361                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMshrMissRate::processor.cores.core.data     0.001332                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMshrMissRate::total     0.001991                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::cache_hierarchy.l2caches.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::processor.cores.core.inst     0.959361                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::processor.cores.core.data     0.001332                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::total     0.007003                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::processor.cores.core.inst 69832.072617                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::processor.cores.core.data 70286.786787                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::total 70135.975916                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::cache_hierarchy.l2caches.prefetcher  3130.800877                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::processor.cores.core.inst 69832.072617                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::processor.cores.core.data 70286.786787                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::total 22180.916976                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMisses::cache_hierarchy.l2caches.prefetcher         5017                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMisses::total         5017                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissLatency::cache_hierarchy.l2caches.prefetcher     15707228                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissLatency::total     15707228                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissRate::cache_hierarchy.l2caches.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2caches.HardPFReq.avgMshrMissLatency::cache_hierarchy.l2caches.prefetcher  3130.800877                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.HardPFReq.avgMshrMissLatency::total  3130.800877                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.misses::processor.cores.core.data           41                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.misses::total           41                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.accesses::processor.cores.core.data           41                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.InvalidateReq.accesses::total           41                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.InvalidateReq.missRate::processor.cores.core.data            1                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.missRate::total            1                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMisses::processor.cores.core.data           41                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMisses::total           41                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissLatency::processor.cores.core.data       861000                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissLatency::total       861000                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissRate::processor.cores.core.data            1                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissRate::total            1                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.avgMshrMissLatency::processor.cores.core.data        21000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.avgMshrMissLatency::total        21000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.hits::processor.cores.core.inst           28                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.hits::total           28                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.misses::processor.cores.core.inst          661                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.misses::total          661                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.missLatency::processor.cores.core.inst     54091000                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.missLatency::total     54091000                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.accesses::processor.cores.core.inst          689                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.accesses::total          689                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.missRate::processor.cores.core.inst     0.959361                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.missRate::total     0.959361                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.avgMissLatency::processor.cores.core.inst 81832.072617                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.avgMissLatency::total 81832.072617                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMisses::processor.cores.core.inst          661                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMisses::total          661                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissLatency::processor.cores.core.inst     46159000                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissLatency::total     46159000                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissRate::processor.cores.core.inst     0.959361                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissRate::total     0.959361                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.avgMshrMissLatency::processor.cores.core.inst 69832.072617                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.avgMshrMissLatency::total 69832.072617                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.hits::processor.cores.core.data        78536                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.hits::total        78536                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.misses::processor.cores.core.data          147                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.misses::total          147                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.missLatency::processor.cores.core.data     12571000                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.missLatency::total     12571000                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.accesses::processor.cores.core.data        78683                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadExReq.accesses::total        78683                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadExReq.missRate::processor.cores.core.data     0.001868                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.missRate::total     0.001868                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.avgMissLatency::processor.cores.core.data 85517.006803                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.avgMissLatency::total 85517.006803                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.mshrMisses::processor.cores.core.data          147                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMisses::total          147                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissLatency::processor.cores.core.data     10807000                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissLatency::total     10807000                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissRate::processor.cores.core.data     0.001868                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissRate::total     0.001868                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.avgMshrMissLatency::processor.cores.core.data 73517.006803                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.avgMshrMissLatency::total 73517.006803                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.hits::processor.cores.core.data       920497                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.hits::total       920497                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.misses::processor.cores.core.data         1185                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.misses::total         1185                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.missLatency::processor.cores.core.data     97035000                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.missLatency::total     97035000                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.accesses::processor.cores.core.data       921682                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.accesses::total       921682                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.missRate::processor.cores.core.data     0.001286                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.missRate::total     0.001286                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.avgMissLatency::processor.cores.core.data 81886.075949                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.avgMissLatency::total 81886.075949                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMisses::processor.cores.core.data         1185                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMisses::total         1185                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissLatency::processor.cores.core.data     82815000                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissLatency::total     82815000                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.001286                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissRate::total     0.001286                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 69886.075949                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.avgMshrMissLatency::total 69886.075949                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.UpgradeReq.hits::processor.cores.core.data            1                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.l2caches.UpgradeReq.hits::total            1                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.l2caches.UpgradeReq.accesses::processor.cores.core.data            1                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.UpgradeReq.accesses::total            1                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackClean.hits::writebacks       760869                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2caches.WritebackClean.hits::total       760869                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2caches.WritebackClean.accesses::writebacks       760869                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackClean.accesses::total       760869                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackDirty.hits::writebacks       238756                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2caches.WritebackDirty.hits::total       238756                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2caches.WritebackDirty.accesses::writebacks       238756                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackDirty.accesses::total       238756                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2caches.prefetcher.demandMshrMisses         1993                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2caches.prefetcher.pfIssued       109454                       # number of hwpf issued (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUnused          198                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2caches.prefetcher.accuracy            0                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2caches.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInCache       104437                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2caches.prefetcher.pfLate       104437                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2caches.prefetcher.pfIdentified       111495                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2caches.prefetcher.pfBufferHit         1170                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2caches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2caches.prefetcher.pfRemovedDemand          669                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2caches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2caches.prefetcher.pfSpanPage        10201                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2caches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2caches.tags.tagsInUse  1181.783608                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2caches.tags.totalRefs      1998917                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2caches.tags.sampledRefs       999855                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2caches.tags.avgRefs     1.999207                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2caches.tags.warmupTick      1477000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2caches.tags.occupancies::writebacks  1156.527205                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2caches.tags.occupancies::cache_hierarchy.l2caches.prefetcher    25.256402                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::writebacks     0.035294                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::cache_hierarchy.l2caches.prefetcher     0.000771                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::total     0.036065                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.occupanciesTaskId::1022           32                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2caches.tags.occupanciesTaskId::1024         1260                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1022::0            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1022::3            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1022::4           30                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::0          132                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::1           57                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::2          104                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::4          967                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ratioOccsTaskId::1022     0.000977                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2caches.tags.ratioOccsTaskId::1024     0.038452                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2caches.tags.tagAccesses     33011391                       # Number of tag accesses (Count)
board.cache_hierarchy.l2caches.tags.dataAccesses     33011391                       # Number of data accesses (Count)
board.cache_hierarchy.l2caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp         2076                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq          147                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp          147                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadCleanReq         2076                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::InvalidateReq           41                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2caches.mem_side_port::board.memory.mem_ctrl.port         4487                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2caches.mem_side_port::total         4487                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         4487                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2caches.mem_side_port::board.memory.mem_ctrl.port       142272                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2caches.mem_side_port::total       142272                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total       142272                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples         2264                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0         2264    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total         2264                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy      2349458                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      5174826                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         2264                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            1                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                           1000                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l2caches.prefetcher::samples       230.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples       661.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples      1332.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000575000                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState          37834                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                   2223                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                 2223                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  2.10                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6             2223                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0               1447                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                395                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                179                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                 90                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                 52                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                 27                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                 11                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  9                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  8                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys             142272                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1092386.76480437                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap             130239389000                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap              58587219.52                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l2caches.prefetcher        14720                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst        42304                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data        85248                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l2caches.prefetcher 113022.472291949714                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 324816.757325994608                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 654547.535186421825                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l2caches.prefetcher          230                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst          661                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data         1332                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l2caches.prefetcher      8484674                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst     17526750                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data     35909750                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l2caches.prefetcher     36889.89                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     26515.51                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     26959.27                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l2caches.prefetcher        14720                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst        42304                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data        85248                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total       142272                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst        42304                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        42304                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l2caches.prefetcher          230                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst          661                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data         1332                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total         2223                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l2caches.prefetcher       113022                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst       324817                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data       654548                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total      1092387                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst       324817                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total       324817                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l2caches.prefetcher       113022                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst       324817                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data       654548                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total      1092387                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts            2223                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          184                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          196                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2           54                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3           36                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4           96                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5           69                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           68                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7           55                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8          121                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9          164                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10          229                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11          235                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12          168                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13          254                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14          183                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15          111                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           20239924                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat         11115000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      61921174                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            9104.78                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      27854.78                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits           1887                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        84.89                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          326                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   425.030675                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   276.980642                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   359.015019                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127           60     18.40%     18.40% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           95     29.14%     47.55% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383           30      9.20%     56.75% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           28      8.59%     65.34% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639           15      4.60%     69.94% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767           21      6.44%     76.38% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            7      2.15%     78.53% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            8      2.45%     80.98% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           62     19.02%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          326                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead       142272                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten            0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW           1.092387                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.01                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.01                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          84.89                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       735420                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       368115                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      5412120                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 10280468640.000002                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy   1923423960                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy  48392275680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy  60602683935                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   465.316927                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE 125791192750                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF   4348760000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     99633250                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy      1663620                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       869055                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy     10460100                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 10280468640.000002                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy   2057616210                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy  48279271680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy  60630349305                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   465.529346                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE 125496205904                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF   4348760000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT    394620096                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles        130239587                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.538642                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               1.856520                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded       258712535                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded          924                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued      259040110                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued         2514                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined        28731                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        22996                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           66                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples    130212613                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.989363                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.923700                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0     10024027      7.70%      7.70% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1     23022145     17.68%     25.38% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2     58589689     45.00%     70.37% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3     35515854     27.28%     97.65% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4      3013465      2.31%     99.96% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5        47433      0.04%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total    130212613                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu     44874416     54.95%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            2      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     54.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead     29565573     36.20%     91.15% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite      7223728      8.85%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass           27      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu    175593317     67.79%     67.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult       406355      0.16%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv          411      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            7      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            2      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     67.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu       609266      0.24%     68.18% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp       812509      0.31%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc           17      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            3      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     68.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead     68587294     26.48%     94.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite     13030902      5.03%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total    259040110                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.988951                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy            81663719                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.315255                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads    723769966                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites    256100093                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses    256058359                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads      6189100                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites      2642214                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses      2638971                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses    337420053                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses      3283749                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         4475                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             502                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           26974                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads     68253810                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     13033010                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads        81528                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          154                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return      1429623     11.85%     11.85% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect      1223632     10.14%     21.99% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect       204278      1.69%     23.68% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond      7372297     61.10%     84.79% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond      1224811     10.15%     94.94% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     94.94% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond       610327      5.06%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total     12064968                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return         3526     16.74%     16.74% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect         1714      8.14%     24.88% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect           94      0.45%     25.33% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        13139     62.38%     87.71% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond         1609      7.64%     95.35% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     95.35% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond          980      4.65%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        21062                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return            1      0.04%      0.04% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect          233      9.78%      9.82% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect           31      1.30%     11.13% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond         1976     82.96%     94.08% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond          108      4.53%     98.61% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.61% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond           33      1.39%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total         2382                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return      1426096     11.84%     11.84% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect      1221917     10.15%     21.99% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect       204184      1.70%     23.68% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond      7359153     61.10%     84.78% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond      1223200     10.16%     94.94% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     94.94% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond       609347      5.06%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total     12043897                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect          135      6.11%      6.11% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect           31      1.40%      7.52% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond         1936     87.68%     95.20% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           76      3.44%     98.64% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     98.64% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond           30      1.36%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total         2208                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget      5520439     45.76%     45.76% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB      4300530     35.64%     81.40% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS      1429623     11.85%     93.25% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect       814376      6.75%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total     12064968                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         1565     65.70%     65.70% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return          816     34.26%     99.96% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            1      0.04%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total         2382                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted      7372297                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken      1852827                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect         2382                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss          342                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         1566                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted          816                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups     12064968                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         1501                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits      4912708                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.407188                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          595                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups       814605                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits       814376                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses          229                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return      1429623     11.85%     11.85% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect      1223632     10.14%     21.99% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect       204278      1.69%     23.68% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond      7372297     61.10%     84.79% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond      1224811     10.15%     94.94% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     94.94% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond       610327      5.06%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total     12064968                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return      1429623     19.99%     19.99% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect          500      0.01%     20.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect       204278      2.86%     22.85% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond      4907300     68.61%     91.46% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond          232      0.00%     91.47% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     91.47% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond       610327      8.53%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total      7152260                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect          233     15.52%     15.52% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%     15.52% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond         1160     77.28%     92.80% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond          108      7.20%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total         1501                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect          233     15.52%     15.52% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%     15.52% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond         1160     77.28%     92.80% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond          108      7.20%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total         1501                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups       814605                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits       814376                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses          229                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           64                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords       814669                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            1                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes      1431436                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops      1431431                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes         5334                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used      1426096                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct      1426096                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect            0                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts        24857                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls          858                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts         2041                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples    130207627                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     1.989828                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.974893                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0     36566161     28.08%     28.08% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1     14438086     11.09%     39.17% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2     49593676     38.09%     77.26% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3      8063172      6.19%     83.45% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4      8214522      6.31%     89.76% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5      3395412      2.61%     92.37% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6      3261377      2.50%     94.87% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7      1529362      1.17%     96.05% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8      5145859      3.95%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total    130207627                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           36                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls      1426101                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass           26      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu    175985592     67.92%     67.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult       406355      0.16%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv          401      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            6      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            1      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     68.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu       608930      0.24%     68.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp       811910      0.31%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc           15      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            3      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     68.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead     68247235     26.34%     94.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite     13030296      5.03%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total    259090770                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples      5145859                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts    241792447                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps    259090770                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP    241386404                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP    258684727                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.538642                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     1.856520                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs     81277531                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts    253774732                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts     68247235                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     13030279                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts      2638882                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass           26      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu    175985592     67.92%     67.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult       406355      0.16%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv          401      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            6      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            1      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     68.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu       608930      0.24%     68.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp       811910      0.31%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc           15      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            3      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     68.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead     68247235     26.34%     94.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite     13030296      5.03%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total    259090770                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl     12043897                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl      9804270                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl      2239627                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl      7359153                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl      4684744                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall      1426101                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn      1426096                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles      3939263                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles     13933167                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles    107777490                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles      4559717                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles         2976                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved      4296319                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred          366                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts    259139328                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts        10100                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts    259035635                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop       406451                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches     12046505                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts     68585897                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     13030588                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.988916                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads     12290346                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites     14719413                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads    356290039                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites    236447651                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs     81616485                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads     16407526                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites           51                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecPredRegReads      2436022                       # Number of times the predicate registers were read (Count)
board.processor.cores.core.executeStats0.numVecPredRegWrites       812421                       # Number of times the predicate registers were written (Count)
board.processor.cores.core.executeStats0.numVecRegReads      1624012                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numVecRegWrites      1420978                       # Number of times the vector registers were written (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches      6544529                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles     130192890                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles         6634                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles           53                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles            7                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.icacheWaitRetryStallCycles          677                       # Number of stall cycles due to full MSHR (Cycle)
board.processor.cores.core.fetch.cacheLines     64466400                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          363                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples    130212613                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.990579                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.044546                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0      6264609      4.81%      4.81% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1     52861261     40.60%     45.41% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2      6922965      5.32%     50.72% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3     64163778     49.28%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            3                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total    130212613                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts    241884514                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.857227                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches     12064968                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.092637                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        15669                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles         2976                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles         2476                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles         1077                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts    259119910                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts     68253810                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     13033010                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts          923                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents           17                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents         1059                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          117                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect          819                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         1295                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts         2114                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit    258698560                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount    258697330                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst    129175734                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst    159187135                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        1.986319                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.811471                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads       204972                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads         6575                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            2                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          117                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores         2714                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads       336009                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache          196                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples     68247235                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     4.301214                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     2.201951                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9     67023050     98.21%     98.21% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19       194185      0.28%     98.49% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29      1004805      1.47%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39        13547      0.02%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49         9357      0.01%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59           10      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69           17      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79          487      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89         1391      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99          190      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109           46      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119           31      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129           35      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139            9      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149            3      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159           11      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169            9      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179            3      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189            3      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199            4      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209            3      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219            3      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229            2      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239            2      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249            2      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269            2      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279            6      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289            4      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299            4      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows           14      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          355                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total     68247235                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb            0                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 130239586000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles         2976                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles      6561545                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles      4578559                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles      4969233                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles    109408059                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles      4692241                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts    259124078                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.squashedInsts         3866                       # Number of squashed instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents      1693369                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents          247                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.LQFullEvents      1018873                       # Number of times rename has blocked due to LQ full (Count)
board.processor.cores.core.rename.SQFullEvents         4760                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.fullRegistersEvents           18                       # Number of times there has been no free registers (Count)
board.processor.cores.core.rename.renamedOperands    257311299                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups    391242035                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups    355973206                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups      1624974                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.vecPredLookups      1625136                       # Number of vector predicate rename lookups (Count)
board.processor.cores.core.rename.committedMaps    257275194                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps        36105                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing       406859                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing          822                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts      8939804                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads        384166748                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes       518236247                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts    241386404                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps    258684727                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls          814                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
