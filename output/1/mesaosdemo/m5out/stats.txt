
---------- Begin Simulation Statistics ----------
simSeconds                                   0.012741                       # Number of seconds simulated (Second)
simTicks                                  12740624000                       # Number of ticks simulated (Tick)
finalTick                                 12740624000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                     84.05                       # Real time elapsed on the host (Second)
hostTickRate                                151583338                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    8644568                       # Number of bytes of host memory used (Byte)
simInsts                                     18588096                       # Number of instructions simulated (Count)
simOps                                       24351883                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   221153                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     289728                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.dptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.dptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.iptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.iptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.iptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.iptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.iptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.iptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.demandHits::processor.cores.core.data      8371127                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.demandHits::total      8371127                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::processor.cores.core.data      8371127                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::total      8371127                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.demandMisses::processor.cores.core.data       214578                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.demandMisses::total       214578                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::processor.cores.core.data       214578                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::total       214578                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.demandMissLatency::processor.cores.core.data  10886068590                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMissLatency::total  10886068590                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::processor.cores.core.data  10886068590                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::total  10886068590                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandAccesses::processor.cores.core.data      8585705                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandAccesses::total      8585705                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::processor.cores.core.data      8585705                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::total      8585705                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandMissRate::processor.cores.core.data     0.024992                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMissRate::total     0.024992                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::processor.cores.core.data     0.024992                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::total     0.024992                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::processor.cores.core.data 50732.454352                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::total 50732.454352                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::processor.cores.core.data 50732.454352                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::total 50732.454352                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.blockedCycles::no_mshrs       115462                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCycles::no_targets       983677                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCauses::no_mshrs         5296                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.blockedCauses::no_targets        20352                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.avgBlocked::no_mshrs    21.801737                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.avgBlocked::no_targets    48.333186                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.writebacks::writebacks        53184                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.writebacks::total        53184                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::processor.cores.core.data       160885                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::total       160885                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::processor.cores.core.data       160885                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::total       160885                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::processor.cores.core.data        53693                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::total        53693                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::processor.cores.core.data        53693                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::total        53693                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::processor.cores.core.data   2310187029                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::total   2310187029                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::processor.cores.core.data   2310187029                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::total   2310187029                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::processor.cores.core.data     0.006254                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::total     0.006254                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::processor.cores.core.data     0.006254                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::total     0.006254                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::processor.cores.core.data 43025.851210                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::total 43025.851210                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::processor.cores.core.data 43025.851210                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::total 43025.851210                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.replacements        53184                       # number of replacements (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::processor.cores.core.data      4098361                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::total      4098361                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::processor.cores.core.data        29153                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::total        29153                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::processor.cores.core.data    952467000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::total    952467000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::processor.cores.core.data      4127514                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::total      4127514                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::processor.cores.core.data     0.007063                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::total     0.007063                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::processor.cores.core.data 32671.320276                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::total 32671.320276                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::processor.cores.core.data         7933                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::total         7933                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::processor.cores.core.data        21220                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::total        21220                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::processor.cores.core.data    702426000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::total    702426000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.005141                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::total     0.005141                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 33102.073516                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::total 33102.073516                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.hits::processor.cores.core.data           49                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::total           49                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::processor.cores.core.data            3                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::total            3                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::processor.cores.core.data       218000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::total       218000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::processor.cores.core.data           52                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::total           52                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::processor.cores.core.data     0.057692                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::total     0.057692                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::processor.cores.core.data 72666.666667                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::total 72666.666667                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::processor.cores.core.data            3                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::total            3                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::processor.cores.core.data       212000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::total       212000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::processor.cores.core.data     0.057692                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::total     0.057692                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::processor.cores.core.data 70666.666667                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::total 70666.666667                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::processor.cores.core.data         2009                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::total         2009                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::processor.cores.core.data     82184123                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::total     82184123                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::processor.cores.core.data         2009                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::total         2009                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::processor.cores.core.data            1                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::total            1                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::processor.cores.core.data 40907.975610                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::total 40907.975610                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::processor.cores.core.data         2009                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::total         2009                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::processor.cores.core.data     78166123                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::total     78166123                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::processor.cores.core.data            1                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::total            1                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::processor.cores.core.data 38907.975610                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::total 38907.975610                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.hits::processor.cores.core.data      4272766                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.hits::total      4272766                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::processor.cores.core.data       183416                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::total       183416                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::processor.cores.core.data   9851417467                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::total   9851417467                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::processor.cores.core.data      4456182                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::total      4456182                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::processor.cores.core.data     0.041160                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::total     0.041160                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::processor.cores.core.data 53710.785684                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::total 53710.785684                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::processor.cores.core.data       152952                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::total       152952                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::processor.cores.core.data        30464                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::total        30464                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::processor.cores.core.data   1529594906                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::total   1529594906                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.006836                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::total     0.006836                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 50209.916820                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::total 50209.916820                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.tags.tagsInUse   510.301181                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1dcaches.tags.totalRefs      8424872                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.sampledRefs        53696                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.avgRefs   156.899434                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1dcaches.tags.warmupTick       294000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1dcaches.tags.occupancies::processor.cores.core.data   510.301181                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::processor.cores.core.data     0.996682                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::total     0.996682                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::0           69                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::1          229                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::2          127                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::3           87                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.tagAccesses     17225210                       # Number of tag accesses (Count)
board.cache_hierarchy.l1dcaches.tags.dataAccesses     17225210                       # Number of data accesses (Count)
board.cache_hierarchy.l1dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.demandHits::processor.cores.core.inst      5773522                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.demandHits::total      5773522                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.overallHits::processor.cores.core.inst      5773522                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.overallHits::total      5773522                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.demandMisses::processor.cores.core.inst         4934                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.demandMisses::total         4934                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::processor.cores.core.inst         4934                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::total         4934                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.demandMissLatency::processor.cores.core.inst    246409962                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMissLatency::total    246409962                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::processor.cores.core.inst    246409962                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::total    246409962                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandAccesses::processor.cores.core.inst      5778456                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandAccesses::total      5778456                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::processor.cores.core.inst      5778456                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::total      5778456                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandMissRate::processor.cores.core.inst     0.000854                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMissRate::total     0.000854                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::processor.cores.core.inst     0.000854                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::total     0.000854                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMissLatency::processor.cores.core.inst 49941.216457                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMissLatency::total 49941.216457                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::processor.cores.core.inst 49941.216457                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::total 49941.216457                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.blockedCycles::no_mshrs        31151                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCauses::no_mshrs          603                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.avgBlocked::no_mshrs    51.660033                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.writebacks::writebacks         3722                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.writebacks::total         3722                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::processor.cores.core.inst          699                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::total          699                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::processor.cores.core.inst          699                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::total          699                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::processor.cores.core.inst         4235                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::total         4235                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::processor.cores.core.inst         4235                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::total         4235                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::processor.cores.core.inst    213552977                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::total    213552977                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::processor.cores.core.inst    213552977                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::total    213552977                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissRate::processor.cores.core.inst     0.000733                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMshrMissRate::total     0.000733                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::processor.cores.core.inst     0.000733                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::total     0.000733                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::processor.cores.core.inst 50425.732468                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::total 50425.732468                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::processor.cores.core.inst 50425.732468                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::total 50425.732468                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.replacements         3722                       # number of replacements (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::processor.cores.core.inst      5773522                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::total      5773522                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::processor.cores.core.inst         4934                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::total         4934                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::processor.cores.core.inst    246409962                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::total    246409962                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.accesses::processor.cores.core.inst      5778456                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.accesses::total      5778456                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.missRate::processor.cores.core.inst     0.000854                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.missRate::total     0.000854                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::processor.cores.core.inst 49941.216457                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::total 49941.216457                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::processor.cores.core.inst          699                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::total          699                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::processor.cores.core.inst         4235                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::total         4235                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::processor.cores.core.inst    213552977                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::total    213552977                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.000733                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::total     0.000733                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 50425.732468                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::total 50425.732468                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.tags.tagsInUse   509.209177                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1icaches.tags.totalRefs      5777756                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.sampledRefs         4234                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.avgRefs  1364.609353                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1icaches.tags.warmupTick        90000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1icaches.tags.occupancies::processor.cores.core.inst   509.209177                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::processor.cores.core.inst     0.994549                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::total     0.994549                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::0           97                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::1           62                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::3          264                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::4           89                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1icaches.tags.tagAccesses     11561146                       # Number of tag accesses (Count)
board.cache_hierarchy.l1icaches.tags.dataAccesses     11561146                       # Number of data accesses (Count)
board.cache_hierarchy.l1icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2buses.transDist::ReadResp        25453                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::WritebackDirty        56980                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::WritebackClean         9257                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::CleanEvict         1599                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadExReq        20518                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadExResp        20518                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadCleanReq         4235                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadSharedReq        21219                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::InvalidateReq        11959                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::InvalidateResp        11959                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port        12191                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port       160576                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktCount::total       172767                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port       509184                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port      6074944                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.pktSize::total      6584128                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.snoops            10930                       # Total snoops (Count)
board.cache_hierarchy.l2buses.snoopTraffic       597184                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2buses.snoopFanout::samples        69087                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::mean     0.000029                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::stdev     0.005380                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::0        69085    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::1            2      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::total        69087                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2buses.reqLayer0.occupancy    229568537                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.respLayer0.occupancy     12708993                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.respLayer1.occupancy    137171998                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.snoop_filter.totRequests       115300                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitSingleRequests        57143                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitMultiRequests            2                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2caches.demandHits::processor.cores.core.inst         2169                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.demandHits::processor.cores.core.data        23668                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.demandHits::total        25837                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.overallHits::processor.cores.core.inst         2169                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.overallHits::processor.cores.core.data        23668                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.overallHits::total        25837                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.demandMisses::processor.cores.core.inst         2066                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.demandMisses::processor.cores.core.data        18069                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.demandMisses::total        20135                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.overallMisses::processor.cores.core.inst         2066                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.overallMisses::processor.cores.core.data        18069                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.overallMisses::total        20135                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.demandMissLatency::processor.cores.core.inst    172276902                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMissLatency::processor.cores.core.data   1482944901                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMissLatency::total   1655221803                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::processor.cores.core.inst    172276902                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::processor.cores.core.data   1482944901                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::total   1655221803                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.demandAccesses::processor.cores.core.inst         4235                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandAccesses::processor.cores.core.data        41737                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandAccesses::total        45972                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::processor.cores.core.inst         4235                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::processor.cores.core.data        41737                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::total        45972                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandMissRate::processor.cores.core.inst     0.487839                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMissRate::processor.cores.core.data     0.432925                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMissRate::total     0.437984                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::processor.cores.core.inst     0.487839                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::processor.cores.core.data     0.432925                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::total     0.437984                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.demandAvgMissLatency::processor.cores.core.inst 83386.690223                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMissLatency::processor.cores.core.data 82071.221484                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMissLatency::total 82206.198311                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::processor.cores.core.inst 83386.690223                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::processor.cores.core.data 82071.221484                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::total 82206.198311                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.blockedCycles::no_mshrs        92135                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2caches.blockedCauses::no_mshrs         2751                       # number of times access was blocked (Count)
board.cache_hierarchy.l2caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2caches.avgBlocked::no_mshrs    33.491458                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2caches.writebacks::writebacks         9331                       # number of writebacks (Count)
board.cache_hierarchy.l2caches.writebacks::total         9331                       # number of writebacks (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::processor.cores.core.inst         2066                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::processor.cores.core.data        18069                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::total        20135                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::processor.cores.core.inst         2066                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::processor.cores.core.data        18069                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::total        20135                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMissLatency::processor.cores.core.inst    147496902                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissLatency::processor.cores.core.data   1266116901                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissLatency::total   1413613803                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::processor.cores.core.inst    147496902                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::processor.cores.core.data   1266116901                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::total   1413613803                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissRate::processor.cores.core.inst     0.487839                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMshrMissRate::processor.cores.core.data     0.432925                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMshrMissRate::total     0.437984                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::processor.cores.core.inst     0.487839                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::processor.cores.core.data     0.432925                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::total     0.437984                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::processor.cores.core.inst 71392.498548                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::processor.cores.core.data 70071.221484                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::total 70206.794289                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::processor.cores.core.inst 71392.498548                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::processor.cores.core.data 70071.221484                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::total 70206.794289                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.replacements        10930                       # number of replacements (Count)
board.cache_hierarchy.l2caches.InvalidateReq.hits::processor.cores.core.data         3993                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2caches.InvalidateReq.hits::total         3993                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2caches.InvalidateReq.misses::processor.cores.core.data         7966                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.misses::total         7966                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.accesses::processor.cores.core.data        11959                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.InvalidateReq.accesses::total        11959                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.InvalidateReq.missRate::processor.cores.core.data     0.666109                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.missRate::total     0.666109                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMisses::processor.cores.core.data         7966                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMisses::total         7966                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissLatency::processor.cores.core.data    167294000                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissLatency::total    167294000                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissRate::processor.cores.core.data     0.666109                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissRate::total     0.666109                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.avgMshrMissLatency::processor.cores.core.data 21001.004268                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.avgMshrMissLatency::total 21001.004268                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.hits::processor.cores.core.inst         2169                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.hits::total         2169                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.misses::processor.cores.core.inst         2066                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.misses::total         2066                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.missLatency::processor.cores.core.inst    172276902                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.missLatency::total    172276902                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.accesses::processor.cores.core.inst         4235                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.accesses::total         4235                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.missRate::processor.cores.core.inst     0.487839                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.missRate::total     0.487839                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.avgMissLatency::processor.cores.core.inst 83386.690223                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.avgMissLatency::total 83386.690223                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMisses::processor.cores.core.inst         2066                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMisses::total         2066                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissLatency::processor.cores.core.inst    147496902                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissLatency::total    147496902                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissRate::processor.cores.core.inst     0.487839                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissRate::total     0.487839                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.avgMshrMissLatency::processor.cores.core.inst 71392.498548                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.avgMshrMissLatency::total 71392.498548                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.hits::processor.cores.core.data         7427                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.hits::total         7427                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.misses::processor.cores.core.data        13091                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.misses::total        13091                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.missLatency::processor.cores.core.data   1059837951                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.missLatency::total   1059837951                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.accesses::processor.cores.core.data        20518                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadExReq.accesses::total        20518                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadExReq.missRate::processor.cores.core.data     0.638025                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.missRate::total     0.638025                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.avgMissLatency::processor.cores.core.data 80959.281262                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.avgMissLatency::total 80959.281262                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.mshrMisses::processor.cores.core.data        13091                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMisses::total        13091                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissLatency::processor.cores.core.data    902745951                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissLatency::total    902745951                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissRate::processor.cores.core.data     0.638025                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissRate::total     0.638025                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.avgMshrMissLatency::processor.cores.core.data 68959.281262                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.avgMshrMissLatency::total 68959.281262                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.hits::processor.cores.core.data        16241                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.hits::total        16241                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.misses::processor.cores.core.data         4978                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.misses::total         4978                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.missLatency::processor.cores.core.data    423106950                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.missLatency::total    423106950                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.accesses::processor.cores.core.data        21219                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.accesses::total        21219                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.missRate::processor.cores.core.data     0.234601                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.missRate::total     0.234601                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.avgMissLatency::processor.cores.core.data 84995.369626                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.avgMissLatency::total 84995.369626                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMisses::processor.cores.core.data         4978                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMisses::total         4978                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissLatency::processor.cores.core.data    363370950                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissLatency::total    363370950                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.234601                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissRate::total     0.234601                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 72995.369626                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.avgMshrMissLatency::total 72995.369626                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.WritebackClean.hits::writebacks         9255                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2caches.WritebackClean.hits::total         9255                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2caches.WritebackClean.accesses::writebacks         9255                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackClean.accesses::total         9255                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackDirty.hits::writebacks        47649                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2caches.WritebackDirty.hits::total        47649                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2caches.WritebackDirty.accesses::writebacks        47649                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackDirty.accesses::total        47649                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2caches.prefetcher.demandMshrMisses        20135                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2caches.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2caches.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2caches.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2caches.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2caches.prefetcher.pfIdentified       162810                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2caches.prefetcher.pfBufferHit       116409                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2caches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2caches.prefetcher.pfRemovedDemand        22459                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2caches.prefetcher.pfRemovedFull         4585                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2caches.prefetcher.pfSpanPage        29246                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2caches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2caches.tags.tagsInUse 15226.934446                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2caches.tags.totalRefs        86734                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2caches.tags.sampledRefs        56904                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2caches.tags.avgRefs     1.524216                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2caches.tags.warmupTick     14580000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2caches.tags.occupancies::writebacks 15226.934446                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::writebacks     0.929378                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::total     0.929378                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.occupanciesTaskId::1024        16144                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::0          167                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::1          330                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::2         1143                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::3         9765                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::4         4739                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ratioOccsTaskId::1024     0.985352                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2caches.tags.tagAccesses      1894264                       # Number of tag accesses (Count)
board.cache_hierarchy.l2caches.tags.dataAccesses      1894264                       # Number of data accesses (Count)
board.cache_hierarchy.l2caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp         7043                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty         9331                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::CleanEvict         1599                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq        13091                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp        13091                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadCleanReq         7044                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::InvalidateReq         7966                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2caches.mem_side_port::board.memory.mem_ctrl.port        59165                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2caches.mem_side_port::total        59165                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total        59165                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2caches.mem_side_port::board.memory.mem_ctrl.port      1885760                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2caches.mem_side_port::total      1885760                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      1885760                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        28101                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        28101    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        28101                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     48362203                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy     46353998                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests        39031                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests        10932                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                           1000                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples      9331.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples      2066.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples     18049.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000781060500                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds          525                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds          525                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState          52269                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState          8794                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  20135                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  9331                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                20135                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                9331                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                20                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.01                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 22.44                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            20135                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6            9331                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              19237                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                878                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15               336                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16               361                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17               528                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18               549                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19               553                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20               540                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21               547                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               544                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23               542                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24               546                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25               543                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26               549                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27               539                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28               533                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29               530                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30               526                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31               525                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32               525                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples          525                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    38.281905                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev   362.964497                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-511          523     99.62%     99.62% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::512-1023            1      0.19%     99.81% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::8192-8703            1      0.19%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total          525                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples          525                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    17.721905                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    17.611014                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     2.252818                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16          183     34.86%     34.86% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::17            5      0.95%     35.81% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::18          279     53.14%     88.95% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::19           24      4.57%     93.52% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::20           12      2.29%     95.81% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::21            4      0.76%     96.57% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::22            3      0.57%     97.14% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::24            2      0.38%     97.52% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::25            4      0.76%     98.29% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::26            1      0.19%     98.48% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::27            2      0.38%     98.86% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::29            1      0.19%     99.05% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::30            1      0.19%     99.24% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::32            2      0.38%     99.62% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::34            1      0.19%     99.81% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::38            1      0.19%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total          525                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ               1280                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            1288640                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys          597184                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         101144182.57692872                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         46872429.48226084                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap              12740610000                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                432383.42                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst       132224                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data      1155136                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks       595456                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 10378141.604367258027                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 90665574.935733124614                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 46736800.332542575896                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst         2066                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data        18069                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks         9331                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst     57825752                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data    483742000                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks 273853093500                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     27989.23                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     26771.93                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks  29348740.06                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst       132160                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data      1156416                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      1288576                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst       132160                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total       132160                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::writebacks       597184                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total       597184                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst         2065                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data        18069                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        20134                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::writebacks         9331                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total         9331                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     10373118                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data     90766041                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total    101139159                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     10373118                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total     10373118                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::writebacks     46872429                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     46872429                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::writebacks     46872429                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     10373118                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data     90766041                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total    148011589                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           20115                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts           9304                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1268                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1447                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1408                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3         1141                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4         1237                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5         1183                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6         1273                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7         1292                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8         1303                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         1171                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10         1252                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11         1346                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         1411                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13         1137                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14         1048                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1198                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          609                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          667                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2          638                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          573                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          661                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          460                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6          499                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7          523                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8          644                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9          662                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10          647                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11          597                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12          753                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13          475                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14          484                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15          412                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          164411502                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        100575000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat     541567752                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            8173.58                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      26923.58                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          16313                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits          3371                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        81.10                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        36.23                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         9727                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   193.421199                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   122.267906                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   250.854481                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         4981     51.21%     51.21% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255         2803     28.82%     80.02% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          801      8.23%     88.26% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511          270      2.78%     91.04% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639           95      0.98%     92.01% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767           54      0.56%     92.57% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           53      0.54%     93.11% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023           26      0.27%     93.38% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151          644      6.62%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         9727                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead      1287360                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten       595456                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW         101.043717                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          46.736800                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               1.15                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.79                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.37                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          66.91                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy     35121660                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy     18652425                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     73177860                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy     24168600                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1005551040.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy   2784256200                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy   2547763200                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy   6488690985                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   509.291459                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE   6593890749                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF    425360000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT   5721373251                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     34386240                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     18261540                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy     70443240                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy     24398280                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1005551040.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy   2613640950                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy   2691439200                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   6458120490                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   506.892009                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE   6969595997                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF    425360000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   5345668003                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles         12740625                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.685307                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               1.459201                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded        24751011                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded          395                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued       25347230                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued        33022                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined       399522                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined       314011                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved          163                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples     12655978                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     2.002787                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.305813                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0      2579609     20.38%     20.38% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1      1383004     10.93%     31.31% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2      3762242     29.73%     61.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3      3288278     25.98%     87.02% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4      1640159     12.96%     99.98% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5         1844      0.01%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6          842      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total     12655978                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu      3468858     49.71%     49.71% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0      0.00%     49.71% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     49.71% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd         2523      0.04%     49.75% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp          454      0.01%     49.75% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt         5810      0.08%     49.84% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult         2126      0.03%     49.87% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc          980      0.01%     49.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv          678      0.01%     49.89% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc          757      0.01%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            1      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt           18      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc           82      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            3      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     49.90% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead      1600255     22.93%     72.84% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite      1895616     27.16%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass          272      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu     15609721     61.58%     61.58% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult         7259      0.03%     61.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv          176      0.00%     61.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd        27297      0.11%     61.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp        37064      0.15%     61.87% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt        65476      0.26%     62.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult        60631      0.24%     62.37% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc        71099      0.28%     62.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv        10982      0.04%     62.69% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc        67527      0.27%     62.96% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt          348      0.00%     62.96% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd          258      0.00%     62.96% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     62.96% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu         2873      0.01%     62.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp           99      0.00%     62.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt        11434      0.05%     63.01% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc        11562      0.05%     63.06% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult          256      0.00%     63.06% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc          512      0.00%     63.06% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     63.06% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift          643      0.00%     63.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     63.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     63.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     63.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            7      0.00%     63.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     63.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     63.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     63.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     63.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     63.07% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult         3976      0.02%     63.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc         7945      0.03%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     63.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead      4878746     19.25%     82.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite      4471067     17.64%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total     25347230                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.989481                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy             6978161                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.275303                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads     68963542                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites     24489143                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses     23880716                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads      1398079                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites       661838                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses       639062                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses     31573194                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses       751925                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts        85554                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled            1913                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           84647                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads      4179646                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores      4478891                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads          782                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          571                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return       500400     15.29%     15.29% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect       499499     15.26%     30.55% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect         2385      0.07%     30.63% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond      1736785     53.07%     83.70% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond        40651      1.24%     84.94% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     84.94% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond       492909     15.06%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total      3272629                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return         4039      4.24%      4.24% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect         5136      5.39%      9.62% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect          382      0.40%     10.03% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        70989     74.47%     84.49% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond        10951     11.49%     95.98% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     95.98% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond         3831      4.02%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        95328                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return            7      0.02%      0.02% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect          807      2.07%      2.09% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect          172      0.44%      2.53% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond        37087     95.22%     97.75% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond          478      1.23%     98.98% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     98.98% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond          397      1.02%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total        38948                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return       496361     15.62%     15.62% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect       494363     15.56%     31.18% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect         2003      0.06%     31.24% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond      1665796     52.43%     83.67% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond        29700      0.93%     84.61% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     84.61% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond       489078     15.39%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total      3177301                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect          565      1.50%      1.50% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect          169      0.45%      1.94% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond        36347     96.27%     98.22% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond          321      0.85%     99.07% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     99.07% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond          352      0.93%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total        37754                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget       694614     21.22%     21.22% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB      1585336     48.44%     69.67% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS       500399     15.29%     84.96% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect       492280     15.04%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total      3272629                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch        20320     52.17%     52.17% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return        18615     47.79%     99.97% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            7      0.02%     99.98% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            6      0.02%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total        38948                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted      1736785                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken      1049919                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect        38948                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss         1990                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted        20333                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted        18615                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups      3272629                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates        19757                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits      2200329                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.672343                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         3154                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups       495294                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits       492280                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses         3014                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return       500400     15.29%     15.29% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect       499499     15.26%     30.55% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect         2385      0.07%     30.63% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond      1736785     53.07%     83.70% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond        40651      1.24%     84.94% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     84.94% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond       492909     15.06%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total      3272629                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return       500400     46.67%     46.67% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect         2018      0.19%     46.85% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect         2385      0.22%     47.08% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond        73390      6.84%     53.92% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond         1198      0.11%     54.03% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     54.03% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond       492909     45.97%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total      1072300                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect          807      4.08%      4.08% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      4.08% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond        18472     93.50%     97.58% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond          478      2.42%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total        19757                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect          807      4.08%      4.08% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      4.08% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond        18472     93.50%     97.58% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond          478      2.42%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total        19757                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups       495294                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits       492280                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses         3014                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords          569                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords       495863                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            1                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes       505923                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops       505918                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes         9557                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used       496361                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct       496361                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect            0                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts       326130                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls          232                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts        37825                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples     12597973                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     1.933241                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     2.431056                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0      5280370     41.91%     41.91% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1      1682916     13.36%     55.27% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2      2383393     18.92%     74.19% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3       512272      4.07%     78.26% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4       905712      7.19%     85.45% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5       362789      2.88%     88.33% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6       262713      2.09%     90.41% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7       307139      2.44%     92.85% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8       900669      7.15%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total     12597973                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           59                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls       496366                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass           78      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu     15442267     63.41%     63.41% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult         7117      0.03%     63.43% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv          115      0.00%     63.44% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd        26518      0.11%     63.54% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp        34631      0.14%     63.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt        64749      0.27%     63.95% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult        60274      0.25%     64.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc        71090      0.29%     64.49% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv        10936      0.04%     64.54% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc        66170      0.27%     64.81% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt          345      0.00%     64.81% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd          257      0.00%     64.81% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     64.81% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu         2866      0.01%     64.82% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp           72      0.00%     64.82% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt        11234      0.05%     64.87% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc        10977      0.05%     64.91% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult          256      0.00%     64.91% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc          512      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift          639      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            7      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     64.92% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult         3973      0.02%     64.94% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc         7942      0.03%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     64.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead      4074121     16.73%     81.70% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite      4457768     18.30%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total     24354914                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples       900669                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts     18591127                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps     24354914                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP     18588096                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP     24351883                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.685307                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     1.459201                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs      8531889                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts     22873193                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts      4074121                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts      4457716                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts       633076                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass           78      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu     15442267     63.41%     63.41% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult         7117      0.03%     63.43% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv          115      0.00%     63.44% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd        26518      0.11%     63.54% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp        34631      0.14%     63.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt        64749      0.27%     63.95% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult        60274      0.25%     64.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc        71090      0.29%     64.49% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv        10936      0.04%     64.54% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc        66170      0.27%     64.81% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt          345      0.00%     64.81% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd          257      0.00%     64.81% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     64.81% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu         2866      0.01%     64.82% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp           72      0.00%     64.82% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt        11234      0.05%     64.87% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc        10977      0.05%     64.91% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult          256      0.00%     64.91% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc          512      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift          639      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            7      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     64.92% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult         3973      0.02%     64.94% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc         7942      0.03%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     64.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead      4074121     16.73%     81.70% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite      4457768     18.30%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total     24354914                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl      3177301                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl      2189859                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl       987442                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl      1665796                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl      1511505                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall       496366                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn       496361                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles       812481                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles      2885905                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles      7994179                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles       924956                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles        38457                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved      1568919                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred         1344                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts     24986481                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts       137257                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts     25261676                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop         3574                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches      3192369                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts      4845785                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts      4466909                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.982766                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads      3653946                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites      3695990                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads     29631115                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites     17768222                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs      9312694                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads      4133510                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites       294378                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads       795452                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numVecRegWrites       422208                       # Number of times the vector registers were written (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches      2578015                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles      12501611                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles        79484                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles          885                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles         2010                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.icacheWaitRetryStallCycles         1567                       # Number of stall cycles due to full MSHR (Cycle)
board.processor.cores.core.fetch.cacheLines      5778472                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         1715                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples     12655978                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.005140                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.219728                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0      2317293     18.31%     18.31% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1      2430139     19.20%     37.51% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2       778768      6.15%     43.66% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3      7129778     56.34%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            3                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total     12655978                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts     19541673                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.533808                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches      3272629                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.256866                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles       110163                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles        38457                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles        26785                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles         8664                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts     24754980                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts      4179646                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts      4478891                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts          390                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents          107                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents         8461                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents           53                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect        18745                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect        20052                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts        38797                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit     24523378                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount     24519778                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst     12129343                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst     21779970                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        1.924535                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.556904                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads         3667                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads       105525                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            7                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation           53                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores        21123                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads       662808                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache        24682                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples      4074121                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     5.971108                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    10.251361                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9      3957560     97.14%     97.14% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19        19156      0.47%     97.61% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29        35786      0.88%     98.49% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39          301      0.01%     98.49% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49          121      0.00%     98.50% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59          129      0.00%     98.50% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69        39719      0.97%     99.48% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79         2853      0.07%     99.55% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89        10736      0.26%     99.81% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99         4244      0.10%     99.91% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109          400      0.01%     99.92% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119          209      0.01%     99.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129          137      0.00%     99.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139          142      0.00%     99.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149          234      0.01%     99.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159          426      0.01%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169          170      0.00%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179           73      0.00%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189           77      0.00%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199          130      0.00%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209          131      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219           93      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229           93      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239          103      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249          104      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259           71      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269          152      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279          103      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289           38      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299           96      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows          534      0.01%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            3                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          521                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total      4074121                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb           15                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb           15                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb           15                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb           15                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb           15                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON  12740624000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles        38457                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles      1378468                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles      1266171                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles        26516                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles      8159760                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles      1786606                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts     24832036                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.squashedInsts        73773                       # Number of squashed instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents        31641                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents          299                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.LQFullEvents          697                       # Number of times rename has blocked due to LQ full (Count)
board.processor.cores.core.rename.SQFullEvents       978897                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.fullRegistersEvents       177166                       # Number of times there has been no free registers (Count)
board.processor.cores.core.rename.renamedOperands     23698473                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups     37538506                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups     29321647                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups       803227                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.vecPredLookups           13                       # Number of vector predicate rename lookups (Count)
board.processor.cores.core.rename.committedMaps     23156651                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps       541822                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing         1292                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing          214                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts      2088267                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads         36370782                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes        49420149                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts     18588096                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps     24351883                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls          122                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
