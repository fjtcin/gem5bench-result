
---------- Begin Simulation Statistics ----------
simSeconds                                   0.066418                       # Number of seconds simulated (Second)
simTicks                                  66418489000                       # Number of ticks simulated (Tick)
finalTick                                 66418489000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                    319.45                       # Real time elapsed on the host (Second)
hostTickRate                                207913150                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    8659024                       # Number of bytes of host memory used (Byte)
simInsts                                     73310226                       # Number of instructions simulated (Count)
simOps                                       87136743                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   229487                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     272768                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.dptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.dptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.iptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.iptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.iptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.iptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.iptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.iptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.demandHits::processor.cores.core.data     28701298                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.demandHits::total     28701298                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::processor.cores.core.data     28701298                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::total     28701298                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.demandMisses::processor.cores.core.data       235635                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.demandMisses::total       235635                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::processor.cores.core.data       235635                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::total       235635                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.demandMissLatency::processor.cores.core.data   5400866595                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMissLatency::total   5400866595                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::processor.cores.core.data   5400866595                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::total   5400866595                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandAccesses::processor.cores.core.data     28936933                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandAccesses::total     28936933                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::processor.cores.core.data     28936933                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::total     28936933                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandMissRate::processor.cores.core.data     0.008143                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMissRate::total     0.008143                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::processor.cores.core.data     0.008143                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::total     0.008143                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::processor.cores.core.data 22920.476988                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::total 22920.476988                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::processor.cores.core.data 22920.476988                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::total 22920.476988                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.blockedCycles::no_mshrs         5832                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCycles::no_targets       174620                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCauses::no_mshrs          435                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.blockedCauses::no_targets        16253                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.avgBlocked::no_mshrs    13.406897                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.avgBlocked::no_targets    10.743863                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.writebacks::writebacks        81737                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.writebacks::total        81737                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::processor.cores.core.data       153645                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::total       153645                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::processor.cores.core.data       153645                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::total       153645                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::processor.cores.core.data        81990                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::total        81990                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::processor.cores.core.data        81990                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::total        81990                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::processor.cores.core.data   1801950992                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::total   1801950992                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::processor.cores.core.data   1801950992                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::total   1801950992                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::processor.cores.core.data     0.002833                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::total     0.002833                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::processor.cores.core.data     0.002833                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::total     0.002833                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::processor.cores.core.data 21977.692304                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::total 21977.692304                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::processor.cores.core.data 21977.692304                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::total 21977.692304                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.replacements        81737                       # number of replacements (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::processor.cores.core.data     15183398                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::total     15183398                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::processor.cores.core.data        75678                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::total        75678                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::processor.cores.core.data   1769312000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::total   1769312000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::processor.cores.core.data     15259076                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::total     15259076                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::processor.cores.core.data     0.004960                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::total     0.004960                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::processor.cores.core.data 23379.476202                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::total 23379.476202                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::processor.cores.core.data        26325                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::total        26325                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::processor.cores.core.data        49353                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::total        49353                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::processor.cores.core.data   1002552000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::total   1002552000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.003234                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::total     0.003234                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 20313.901890                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::total 20313.901890                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.hits::processor.cores.core.data           49                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::total           49                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::processor.cores.core.data            3                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::total            3                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::processor.cores.core.data       294000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::total       294000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::processor.cores.core.data           52                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::total           52                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::processor.cores.core.data     0.057692                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::total     0.057692                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::processor.cores.core.data        98000                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::total        98000                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::processor.cores.core.data            3                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::total            3                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::processor.cores.core.data       288000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::total       288000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::processor.cores.core.data     0.057692                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::total     0.057692                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::processor.cores.core.data        96000                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::total        96000                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.hits::processor.cores.core.data     13517900                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.hits::total     13517900                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::processor.cores.core.data       159957                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::total       159957                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::processor.cores.core.data   3631554595                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::total   3631554595                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::processor.cores.core.data     13677857                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::total     13677857                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::processor.cores.core.data     0.011695                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::total     0.011695                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::processor.cores.core.data 22703.317735                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::total 22703.317735                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::processor.cores.core.data       127320                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::total       127320                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::processor.cores.core.data        32637                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::total        32637                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::processor.cores.core.data    799398992                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::total    799398992                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.002386                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::total     0.002386                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 24493.641940                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::total 24493.641940                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.tags.tagsInUse   255.885296                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1dcaches.tags.totalRefs     28783340                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.sampledRefs        81993                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.avgRefs   351.046309                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1dcaches.tags.warmupTick       311000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1dcaches.tags.occupancies::processor.cores.core.data   255.885296                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::processor.cores.core.data     0.999552                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::total     0.999552                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::0           57                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::1          120                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::2           33                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::4           46                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.tagAccesses     57955963                       # Number of tag accesses (Count)
board.cache_hierarchy.l1dcaches.tags.dataAccesses     57955963                       # Number of data accesses (Count)
board.cache_hierarchy.l1dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.demandHits::processor.cores.core.inst     23114411                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.demandHits::total     23114411                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.overallHits::processor.cores.core.inst     23114411                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.overallHits::total     23114411                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.demandMisses::processor.cores.core.inst        41060                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.demandMisses::total        41060                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::processor.cores.core.inst        41060                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::total        41060                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.demandMissLatency::processor.cores.core.inst    789040976                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMissLatency::total    789040976                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::processor.cores.core.inst    789040976                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::total    789040976                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandAccesses::processor.cores.core.inst     23155471                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandAccesses::total     23155471                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::processor.cores.core.inst     23155471                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::total     23155471                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandMissRate::processor.cores.core.inst     0.001773                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMissRate::total     0.001773                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::processor.cores.core.inst     0.001773                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::total     0.001773                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMissLatency::processor.cores.core.inst 19216.779737                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMissLatency::total 19216.779737                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::processor.cores.core.inst 19216.779737                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::total 19216.779737                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.blockedCycles::no_mshrs        19319                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCycles::no_targets           56                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCauses::no_mshrs          352                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.blockedCauses::no_targets            2                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.avgBlocked::no_mshrs    54.883523                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.avgBlocked::no_targets           28                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.writebacks::writebacks        40004                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.writebacks::total        40004                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::processor.cores.core.inst          799                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::total          799                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::processor.cores.core.inst          799                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::total          799                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::processor.cores.core.inst        40261                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::total        40261                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::processor.cores.core.inst        40261                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::total        40261                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::processor.cores.core.inst    721875985                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::total    721875985                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::processor.cores.core.inst    721875985                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::total    721875985                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissRate::processor.cores.core.inst     0.001739                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMshrMissRate::total     0.001739                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::processor.cores.core.inst     0.001739                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::total     0.001739                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::processor.cores.core.inst 17929.906982                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::total 17929.906982                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::processor.cores.core.inst 17929.906982                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::total 17929.906982                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.replacements        40004                       # number of replacements (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::processor.cores.core.inst     23114411                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::total     23114411                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::processor.cores.core.inst        41060                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::total        41060                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::processor.cores.core.inst    789040976                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::total    789040976                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.accesses::processor.cores.core.inst     23155471                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.accesses::total     23155471                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.missRate::processor.cores.core.inst     0.001773                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.missRate::total     0.001773                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::processor.cores.core.inst 19216.779737                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::total 19216.779737                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::processor.cores.core.inst          799                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::total          799                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::processor.cores.core.inst        40261                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::total        40261                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::processor.cores.core.inst    721875985                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::total    721875985                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.001739                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::total     0.001739                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 17929.906982                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::total 17929.906982                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.tags.tagsInUse   255.886319                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1icaches.tags.totalRefs     23154671                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.sampledRefs        40260                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.avgRefs   575.128440                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1icaches.tags.warmupTick        95000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1icaches.tags.occupancies::processor.cores.core.inst   255.886319                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::processor.cores.core.inst     0.999556                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::total     0.999556                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.occupanciesTaskId::1024          256                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::0           75                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::1           29                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::4          152                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1icaches.tags.tagAccesses     46351202                       # Number of tag accesses (Count)
board.cache_hierarchy.l1icaches.tags.dataAccesses     46351202                       # Number of data accesses (Count)
board.cache_hierarchy.l1icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2buses.transDist::ReadResp        89612                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::WritebackDirty        74080                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::WritebackClean        61090                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::CleanEvict         2878                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::HardPFReq        40538                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadExReq        32209                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadExResp        32209                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadCleanReq        40261                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadSharedReq        49352                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::InvalidateReq          432                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::InvalidateResp          432                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port       120525                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port       245723                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktCount::total       366248                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port     10273792                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port     20902144                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.pktSize::total     31175936                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.snoops            56845                       # Total snoops (Count)
board.cache_hierarchy.l2buses.snoopTraffic      1718912                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2buses.snoopFanout::samples       179099                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::mean     0.090648                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::stdev     0.287109                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::0       162864     90.94%     90.94% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::1        16235      9.06%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::total       179099                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2buses.reqLayer0.occupancy    730959000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.respLayer0.occupancy    201304995                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.respLayer1.occupancy    408237000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.snoop_filter.totRequests       243995                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitSingleRequests       121741                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitMultiRequests            3                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.totSnoops        16232                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitSingleSnoops        16232                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2caches.demandHits::processor.cores.core.inst        38814                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.demandHits::processor.cores.core.data        76524                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.demandHits::total       115338                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.overallHits::processor.cores.core.inst        38814                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.overallHits::processor.cores.core.data        76524                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.overallHits::total       115338                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.demandMisses::processor.cores.core.inst         1447                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.demandMisses::processor.cores.core.data         5037                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.demandMisses::total         6484                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.overallMisses::processor.cores.core.inst         1447                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.overallMisses::processor.cores.core.data         5037                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.overallMisses::total         6484                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.demandMissLatency::processor.cores.core.inst    134376000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMissLatency::processor.cores.core.data    530954000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMissLatency::total    665330000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::processor.cores.core.inst    134376000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::processor.cores.core.data    530954000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::total    665330000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.demandAccesses::processor.cores.core.inst        40261                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandAccesses::processor.cores.core.data        81561                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandAccesses::total       121822                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::processor.cores.core.inst        40261                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::processor.cores.core.data        81561                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::total       121822                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandMissRate::processor.cores.core.inst     0.035940                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMissRate::processor.cores.core.data     0.061757                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMissRate::total     0.053225                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::processor.cores.core.inst     0.035940                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::processor.cores.core.data     0.061757                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::total     0.053225                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.demandAvgMissLatency::processor.cores.core.inst 92865.238424                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMissLatency::processor.cores.core.data 105410.760373                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMissLatency::total 102611.042566                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::processor.cores.core.inst 92865.238424                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::processor.cores.core.data 105410.760373                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::total 102611.042566                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2caches.writebacks::writebacks        13429                       # number of writebacks (Count)
board.cache_hierarchy.l2caches.writebacks::total        13429                       # number of writebacks (Count)
board.cache_hierarchy.l2caches.demandMshrHits::processor.cores.core.data          386                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2caches.demandMshrHits::total          386                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2caches.overallMshrHits::processor.cores.core.data          386                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2caches.overallMshrHits::total          386                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::processor.cores.core.inst         1447                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::processor.cores.core.data         4651                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::total         6098                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::cache_hierarchy.l2caches.prefetcher        34798                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::processor.cores.core.inst         1447                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::processor.cores.core.data         4651                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::total        40896                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMissLatency::processor.cores.core.inst    117024000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissLatency::processor.cores.core.data    449266002                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissLatency::total    566290002                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::cache_hierarchy.l2caches.prefetcher   1652314367                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::processor.cores.core.inst    117024000                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::processor.cores.core.data    449266002                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::total   2218604369                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissRate::processor.cores.core.inst     0.035940                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMshrMissRate::processor.cores.core.data     0.057025                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMshrMissRate::total     0.050057                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::cache_hierarchy.l2caches.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::processor.cores.core.inst     0.035940                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::processor.cores.core.data     0.057025                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::total     0.335703                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::processor.cores.core.inst 80873.531444                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::processor.cores.core.data 96595.571275                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::total 92864.874057                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::cache_hierarchy.l2caches.prefetcher 47483.026812                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::processor.cores.core.inst 80873.531444                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::processor.cores.core.data 96595.571275                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::total 54249.911214                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.replacements        16307                       # number of replacements (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMisses::cache_hierarchy.l2caches.prefetcher        34798                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMisses::total        34798                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissLatency::cache_hierarchy.l2caches.prefetcher   1652314367                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissLatency::total   1652314367                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissRate::cache_hierarchy.l2caches.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2caches.HardPFReq.avgMshrMissLatency::cache_hierarchy.l2caches.prefetcher 47483.026812                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.HardPFReq.avgMshrMissLatency::total 47483.026812                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.hits::processor.cores.core.data           48                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2caches.InvalidateReq.hits::total           48                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2caches.InvalidateReq.misses::processor.cores.core.data          384                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.misses::total          384                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.missLatency::processor.cores.core.data     10349000                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.missLatency::total     10349000                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.accesses::processor.cores.core.data          432                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.InvalidateReq.accesses::total          432                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.InvalidateReq.missRate::processor.cores.core.data     0.888889                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.missRate::total     0.888889                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.avgMissLatency::processor.cores.core.data 26950.520833                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.avgMissLatency::total 26950.520833                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.mshrHits::processor.cores.core.data          149                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrHits::total          149                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMisses::processor.cores.core.data          235                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMisses::total          235                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissLatency::processor.cores.core.data      4940000                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissLatency::total      4940000                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissRate::processor.cores.core.data     0.543981                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissRate::total     0.543981                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.avgMshrMissLatency::processor.cores.core.data 21021.276596                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.avgMshrMissLatency::total 21021.276596                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.hits::processor.cores.core.inst        38814                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.hits::total        38814                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.misses::processor.cores.core.inst         1447                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.misses::total         1447                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.missLatency::processor.cores.core.inst    134376000                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.missLatency::total    134376000                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.accesses::processor.cores.core.inst        40261                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.accesses::total        40261                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.missRate::processor.cores.core.inst     0.035940                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.missRate::total     0.035940                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.avgMissLatency::processor.cores.core.inst 92865.238424                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.avgMissLatency::total 92865.238424                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMisses::processor.cores.core.inst         1447                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMisses::total         1447                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissLatency::processor.cores.core.inst    117024000                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissLatency::total    117024000                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissRate::processor.cores.core.inst     0.035940                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissRate::total     0.035940                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.avgMshrMissLatency::processor.cores.core.inst 80873.531444                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.avgMshrMissLatency::total 80873.531444                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.hits::processor.cores.core.data        29490                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.hits::total        29490                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.misses::processor.cores.core.data         2719                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.misses::total         2719                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.missLatency::processor.cores.core.data    295092000                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.missLatency::total    295092000                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.accesses::processor.cores.core.data        32209                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadExReq.accesses::total        32209                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadExReq.missRate::processor.cores.core.data     0.084417                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.missRate::total     0.084417                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.avgMissLatency::processor.cores.core.data 108529.606473                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.avgMissLatency::total 108529.606473                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.mshrHits::processor.cores.core.data          386                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrHits::total          386                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMisses::processor.cores.core.data         2333                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMisses::total         2333                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissLatency::processor.cores.core.data    241220002                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissLatency::total    241220002                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissRate::processor.cores.core.data     0.072433                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissRate::total     0.072433                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.avgMshrMissLatency::processor.cores.core.data 103394.771539                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.avgMshrMissLatency::total 103394.771539                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.hits::processor.cores.core.data        47034                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.hits::total        47034                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.misses::processor.cores.core.data         2318                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.misses::total         2318                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.missLatency::processor.cores.core.data    235862000                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.missLatency::total    235862000                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.accesses::processor.cores.core.data        49352                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.accesses::total        49352                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.missRate::processor.cores.core.data     0.046969                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.missRate::total     0.046969                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.avgMissLatency::processor.cores.core.data 101752.372735                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.avgMissLatency::total 101752.372735                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMisses::processor.cores.core.data         2318                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMisses::total         2318                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissLatency::processor.cores.core.data    208046000                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissLatency::total    208046000                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.046969                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissRate::total     0.046969                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 89752.372735                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.avgMshrMissLatency::total 89752.372735                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.WritebackClean.hits::writebacks        61087                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2caches.WritebackClean.hits::total        61087                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2caches.WritebackClean.accesses::writebacks        61087                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackClean.accesses::total        61087                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackDirty.hits::writebacks        60651                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2caches.WritebackDirty.hits::total        60651                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2caches.WritebackDirty.accesses::writebacks        60651                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackDirty.accesses::total        60651                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2caches.prefetcher.demandMshrMisses         6098                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2caches.prefetcher.pfIssued       173834                       # number of hwpf issued (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUnused        17989                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2caches.prefetcher.accuracy            0                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2caches.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInCache       122015                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInMSHR        17021                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2caches.prefetcher.pfLate       139036                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2caches.prefetcher.pfIdentified       173917                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2caches.prefetcher.pfBufferHit           71                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2caches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2caches.prefetcher.pfRemovedDemand            9                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2caches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2caches.prefetcher.pfSpanPage        45627                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2caches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2caches.tags.tagsInUse  7961.189358                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2caches.tags.totalRefs       255690                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2caches.tags.sampledRefs       140304                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2caches.tags.avgRefs     1.822400                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2caches.tags.warmupTick     10455000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2caches.tags.occupancies::writebacks  7884.335001                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2caches.tags.occupancies::cache_hierarchy.l2caches.prefetcher    76.854358                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::writebacks     0.962443                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::cache_hierarchy.l2caches.prefetcher     0.009382                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::total     0.971825                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.occupanciesTaskId::1022           42                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2caches.tags.occupanciesTaskId::1024         8034                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1022::1            3                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1022::4           39                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::0          128                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::1          193                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::2          585                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::3         4456                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::4         2672                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ratioOccsTaskId::1022     0.005127                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2caches.tags.ratioOccsTaskId::1024     0.980713                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2caches.tags.tagAccesses      4044176                       # Number of tag accesses (Count)
board.cache_hierarchy.l2caches.tags.dataAccesses      4044176                       # Number of data accesses (Count)
board.cache_hierarchy.l2caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp        22330                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty        13429                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::CleanEvict         2878                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq         2333                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp         2333                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadCleanReq        22330                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::InvalidateReq          235                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2caches.mem_side_port::board.memory.mem_ctrl.port        65868                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2caches.mem_side_port::total        65868                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total        65868                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2caches.mem_side_port::board.memory.mem_ctrl.port      4875776                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2caches.mem_side_port::total      4875776                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      4875776                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        24898                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        24898    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        24898                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     79775682                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy     82978929                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests        41205                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests        16310                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                           1000                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples     26858.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l2caches.prefetcher::samples     37132.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples      2892.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples      9264.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.010590359500                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds         1514                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds         1514                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState          94831                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState         25428                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  24663                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                 13429                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                49326                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts               26858                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                38                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  2.48                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 25.72                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            49326                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::7                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6           26858                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::7               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              14617                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              14772                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2               3113                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3               3030                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4               1848                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5               1822                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6               1348                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7               1330                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8               1022                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9               1018                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10               810                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11               795                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12               661                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13               659                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14               536                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15               534                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16               484                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17               481                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                61                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                68                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                88                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                78                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                20                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                20                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                19                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                19                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                18                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                17                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15               638                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16               654                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17               793                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18               876                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19              1191                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20              1337                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21              1441                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22              1497                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23              1565                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24              1615                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25              1656                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26              1729                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27              1779                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28              1931                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29              1952                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30              1786                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31              1722                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32              1705                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33               492                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34               172                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35               134                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                78                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                50                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                36                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples         1514                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    32.549538                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean    20.436315                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev   363.466781                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-511         1513     99.93%     99.93% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::13824-14335            1      0.07%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total         1514                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples         1514                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    17.724571                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    17.582599                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     2.410067                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16          740     48.88%     48.88% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::17           29      1.92%     50.79% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::18          465     30.71%     81.51% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::19           32      2.11%     83.62% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::20           80      5.28%     88.90% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::21           20      1.32%     90.22% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::22           61      4.03%     94.25% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::23           18      1.19%     95.44% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::24           40      2.64%     98.08% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::25            2      0.13%     98.22% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::26           12      0.79%     99.01% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::27            5      0.33%     99.34% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::28            5      0.33%     99.67% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::30            4      0.26%     99.93% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::31            1      0.07%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total         1514                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ               2432                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            3156864                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys         1718912                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         47529897.88731870                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         25880022.65453525                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap              66418473000                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap               1743633.13                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l2caches.prefetcher      2376448                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst       185088                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data       592896                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks      1717440                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l2caches.prefetcher 35779916.643391273916                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 2786693.927951296791                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 8926671.005719507113                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 25857860.150958869606                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l2caches.prefetcher        37132                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst         2892                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data         9302                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks        26858                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l2caches.prefetcher   2044509350                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst    101352006                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data    470300536                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks 1571487088378                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l2caches.prefetcher     55060.58                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     35045.65                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     50559.08                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks  58510949.75                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l2caches.prefetcher      2376448                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst       185088                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data       595328                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      3156864                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst       185088                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total       185088                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::writebacks      1718912                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total      1718912                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l2caches.prefetcher        18566                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst         1446                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data         4651                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        24663                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::writebacks        13429                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total        13429                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l2caches.prefetcher     35779917                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst      2786694                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data      8963287                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total     47529898                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst      2786694                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total      2786694                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::writebacks     25880023                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     25880023                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::writebacks     25880023                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l2caches.prefetcher     35779917                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst      2786694                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data      8963287                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total     73409921                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           49288                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts          26835                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         3289                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         2910                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         2732                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3         2892                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4         2976                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5         3244                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6         3082                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7         3098                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8         3250                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         3198                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10         3210                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11         3036                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         3175                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13         3244                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14         2902                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         3050                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0         1816                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1         1662                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2         1478                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3         1497                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4         1598                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5         1812                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6         1652                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7         1628                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8         1804                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9         1756                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10         1634                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11         1596                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12         1754                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13         1862                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14         1592                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15         1694                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat         1692011892                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        246440000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    2616161892                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           34329.08                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      53079.08                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          42840                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits         16145                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        86.92                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        60.16                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples        17131                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   284.310782                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   198.475543                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   290.720066                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         1140      6.65%      6.65% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255         9791     57.15%     63.81% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383         2412     14.08%     77.89% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511          850      4.96%     82.85% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          449      2.62%     85.47% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          289      1.69%     87.16% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895          244      1.42%     88.58% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023          238      1.39%     89.97% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         1718     10.03%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total        17131                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead      3154432                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten      1717440                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW          47.493282                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          25.857860                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.57                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.37                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.20                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          77.49                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy     60311580                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy     32037390                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy    172952220                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy     68606460                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 5242879200.000001                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy   4522612560                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy  21696184320                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy  31795583730                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   478.715855                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE  56351269211                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF   2217800000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT   7849419789                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     62053740                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     32974755                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    178964100                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy     71472240                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 5242879200.000001                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy   4389323760                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy  21808427520                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy  31786095315                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   478.572997                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE  56644522890                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF   2217800000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   7556166110                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles         66418490                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.901715                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               1.108998                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded        88169123                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded          390                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued       88903878                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued       143058                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined      1032769                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined       992789                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved          126                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples     66344113                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.340042                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.289841                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0     25012319     37.70%     37.70% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1     12598561     18.99%     56.69% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2     13739991     20.71%     77.40% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3     11194617     16.87%     94.27% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4      3751642      5.65%     99.93% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5        46982      0.07%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            1      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            6                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total     66344113                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu      9263818     43.81%     43.81% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult       277551      1.31%     45.12% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            1      0.00%     45.12% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd        68322      0.32%     45.45% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp        57779      0.27%     45.72% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt        36908      0.17%     45.89% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult        20078      0.09%     45.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc         9419      0.04%     46.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv       104612      0.49%     46.53% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc        73766      0.35%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            1      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt          382      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            1      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     46.88% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead      5607986     26.52%     73.40% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite      5624557     26.60%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass          266      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu     48423800     54.47%     54.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult       815006      0.92%     55.38% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv        59724      0.07%     55.45% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd      1165530      1.31%     56.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp       266591      0.30%     57.06% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt      1061125      1.19%     58.26% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult      2551204      2.87%     61.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc      2416327      2.72%     63.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv       235760      0.27%     64.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc       964262      1.08%     65.19% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt        26885      0.03%     65.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd          266      0.00%     65.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     65.22% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu        14823      0.02%     65.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp         1214      0.00%     65.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt        85777      0.10%     65.34% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc       110185      0.12%     65.46% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult          256      0.00%     65.46% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc          512      0.00%     65.46% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     65.46% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift        10058      0.01%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            2      0.00%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult        40329      0.05%     65.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc        80646      0.09%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     65.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead     16883059     18.99%     84.60% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite     13690271     15.40%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total     88903878                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.338541                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy            21145181                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.237843                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads    232770288                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites     73396190                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses     71878511                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads     32669820                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites     15806232                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses     15587546                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses     93048748                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses     17000045                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts       250503                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled            1516                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           74377                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads     15832569                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     13711348                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads       181732                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          590                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return      1202650     11.88%     11.88% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect      1151655     11.38%     23.26% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect        44018      0.43%     23.69% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond      6479986     64.01%     87.70% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond       456111      4.51%     92.20% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     92.20% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond       789225      7.80%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total     10123645                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return        37299      9.02%      9.02% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect        28626      6.92%     15.94% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect         1691      0.41%     16.35% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond       302167     73.07%     89.42% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond        39348      9.52%     98.94% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.94% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond         4381      1.06%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total       413512                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return            6      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect          760      0.54%      0.54% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect          104      0.07%      0.61% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond       139516     98.56%     99.18% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond          686      0.48%     99.66% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     99.66% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond          477      0.34%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total       141549                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return      1165351     12.00%     12.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect      1123029     11.57%     23.57% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect        42327      0.44%     24.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond      6177817     63.62%     87.63% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond       416762      4.29%     91.92% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     91.92% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond       784844      8.08%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total      9710130                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect          471      0.34%      0.34% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect           99      0.07%      0.41% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond       137550     98.93%     99.34% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond          497      0.36%     99.70% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     99.70% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond          423      0.30%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total       139040                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget      3342076     33.01%     33.01% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB      4749538     46.92%     79.93% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS      1202650     11.88%     91.81% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect       829381      8.19%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total     10123645                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch        58731     41.49%     41.49% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return        82789     58.49%     99.98% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            6      0.00%     99.98% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect           23      0.02%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total       141549                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted      6479986                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken      3147548                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect       141549                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss         2612                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted        58760                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted        82789                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups     10123645                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates        58173                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits      6281523                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.620480                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         3701                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups       833243                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits       829381                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses         3862                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return      1202650     11.88%     11.88% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect      1151655     11.38%     23.26% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect        44018      0.43%     23.69% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond      6479986     64.01%     87.70% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond       456111      4.51%     92.20% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     92.20% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond       789225      7.80%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total     10123645                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return      1202650     31.30%     31.30% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect         1820      0.05%     31.35% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect        44018      1.15%     32.49% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond      1803069     46.93%     79.42% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond         1340      0.03%     79.46% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     79.46% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond       789225     20.54%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total      3842122                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect          760      1.31%      1.31% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      1.31% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond        56727     97.51%     98.82% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond          686      1.18%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total        58173                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect          760      1.31%      1.31% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      1.31% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond        56727     97.51%     98.82% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond          686      1.18%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total        58173                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups       833243                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits       829381                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses         3862                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords          581                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords       833824                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            3                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes      1232972                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops      1232967                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes        67616                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used      1165351                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct      1165351                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect            0                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts       849964                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls          264                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts       140248                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples     66158911                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     1.322339                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     2.061213                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0     34188492     51.68%     51.68% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1     12945661     19.57%     71.24% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2      7976209     12.06%     83.30% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3      2638696      3.99%     87.29% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4      2437810      3.68%     90.97% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5      1287963      1.95%     92.92% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6      1041646      1.57%     94.49% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7       910055      1.38%     95.87% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8      2732379      4.13%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total     66158911                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           59                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls      1165356                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass           82      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu     48424769     55.35%     55.35% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult       814868      0.93%     56.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv        59661      0.07%     56.35% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd      1143092      1.31%     57.66% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp       260824      0.30%     57.96% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt      1056163      1.21%     59.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult      2542968      2.91%     62.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc      2415870      2.76%     64.83% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv       233995      0.27%     65.10% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc       943560      1.08%     66.18% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt        26885      0.03%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd          265      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     66.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu        14814      0.02%     66.23% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp         1190      0.00%     66.23% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt        85563      0.10%     66.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc       110088      0.13%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult          256      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc          512      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     66.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift        10054      0.01%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            2      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult        40325      0.05%     66.51% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc        80643      0.09%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     66.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead     15540543     17.76%     84.37% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite     13677523     15.63%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total     87484515                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples      2732379                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts     73657998                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps     87484515                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP     73310226                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP     87136743                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.901715                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     1.108998                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs     29218066                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts     74046092                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts     15540543                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     13677471                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts     15552770                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass           82      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu     48424769     55.35%     55.35% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult       814868      0.93%     56.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv        59661      0.07%     56.35% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd      1143092      1.31%     57.66% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp       260824      0.30%     57.96% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt      1056163      1.21%     59.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult      2542968      2.91%     62.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc      2415870      2.76%     64.83% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv       233995      0.27%     65.10% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc       943560      1.08%     66.18% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt        26885      0.03%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd          265      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu        14814      0.02%     66.23% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp         1190      0.00%     66.23% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt        85563      0.10%     66.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc       110088      0.13%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult          256      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc          512      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift        10054      0.01%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            2      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult        40325      0.05%     66.51% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc        80643      0.09%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead     15540543     17.76%     84.37% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite     13677523     15.63%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total     87484515                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl      9710130                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl      7717608                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl      1992522                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl      6177817                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl      3532313                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall      1165356                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn      1165351                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles      5712907                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles     28941522                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles     24129997                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles      7418582                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles       141105                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved      4643435                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred         1556                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts     89424320                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts       560990                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts     88653375                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop       348681                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches      9756983                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts     16784740                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     13686397                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.334770                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads     14071878                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites     14002127                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads     98106415                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites     52713804                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs     30471137                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads     45758426                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites      7960072                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecPredRegReads         3313                       # Number of times the predicate registers were read (Count)
board.processor.cores.core.executeStats0.numVecPredRegWrites         1106                       # Number of times the predicate registers were written (Count)
board.processor.cores.core.executeStats0.numVecRegReads     20238088                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numVecRegWrites     12863423                       # Number of times the vector registers were written (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches      6781569                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles      65347067                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles       285102                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles          402                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles         1932                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.icacheWaitRetryStallCycles         1163                       # Number of stall cycles due to full MSHR (Cycle)
board.processor.cores.core.fetch.cacheLines     23155475                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         3319                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples     66344113                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.392812                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.304388                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0     25145119     37.90%     37.90% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1     13375970     20.16%     58.06% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2      4440157      6.69%     64.76% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3     23382867     35.24%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            3                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total     66344113                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts     78064031                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.175336                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches     10123645                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.152422                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles       850998                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles       141105                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles        49718                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles         2437                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts     88518194                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts     15832569                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     13711348                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts          385                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents           48                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents         2380                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          140                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect        82970                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect        59461                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts       142431                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit     87473653                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount     87466057                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst     39933551                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst     64437982                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        1.316893                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.619721                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads       439944                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads       292026                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            2                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          140                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores        33825                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads      1086065                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache        16621                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples     15540543                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     4.448894                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     3.312641                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9     15392226     99.05%     99.05% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19        55274      0.36%     99.40% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29        83207      0.54%     99.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39          689      0.00%     99.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49          632      0.00%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59          109      0.00%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69          211      0.00%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79          608      0.00%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89         1455      0.01%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99         1719      0.01%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109         1559      0.01%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119          666      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129          290      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139          232      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149           94      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159          100      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169          358      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179          415      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189          369      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199          100      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209           17      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219           26      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229            4      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239           18      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249           16      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259            7      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269            6      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279            4      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289           20      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299           14      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows           98      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          510                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total     15540543                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb           15                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb           15                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb           15                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb           15                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb           15                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON  66418489000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles       141105                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles      9663011                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles     21311090                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles        15305                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles     25869613                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles      9343989                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts     88769638                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.squashedInsts       231330                       # Number of squashed instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents       248039                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents          201                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.LQFullEvents         2140                       # Number of times rename has blocked due to LQ full (Count)
board.processor.cores.core.rename.SQFullEvents       295029                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.fullRegistersEvents      4374445                       # Number of times there has been no free registers (Count)
board.processor.cores.core.rename.renamedOperands     92745838                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups    179348816                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups     97992480                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups     20362102                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.vecPredLookups         2214                       # Number of vector predicate rename lookups (Count)
board.processor.cores.core.rename.committedMaps     91276560                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps      1469278                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing          629                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing          181                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts     18148941                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads        151751534                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes       176855000                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts     73310226                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps     87136743                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls          154                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
