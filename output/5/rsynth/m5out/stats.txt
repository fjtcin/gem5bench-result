
---------- Begin Simulation Statistics ----------
simSeconds                                   1.050988                       # Number of seconds simulated (Second)
simTicks                                 1050987966000                       # Number of ticks simulated (Tick)
finalTick                                1050987966000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                   3439.13                       # Real time elapsed on the host (Second)
hostTickRate                                305596715                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    8650664                       # Number of bytes of host memory used (Byte)
simInsts                                    620111512                       # Number of instructions simulated (Count)
simOps                                      632325782                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   180310                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     183862                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.dptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.dptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.iptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.iptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.iptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.iptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.iptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.iptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.demandHits::processor.cores.core.data    238823951                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.demandHits::total    238823951                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::processor.cores.core.data    238823951                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::total    238823951                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.demandMisses::processor.cores.core.data        77542                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.demandMisses::total        77542                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::processor.cores.core.data        77542                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::total        77542                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.demandMissLatency::processor.cores.core.data   1840508781                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMissLatency::total   1840508781                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::processor.cores.core.data   1840508781                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::total   1840508781                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandAccesses::processor.cores.core.data    238901493                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandAccesses::total    238901493                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::processor.cores.core.data    238901493                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::total    238901493                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandMissRate::processor.cores.core.data     0.000325                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMissRate::total     0.000325                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::processor.cores.core.data     0.000325                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::total     0.000325                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::processor.cores.core.data 23735.637216                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::total 23735.637216                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::processor.cores.core.data 23735.637216                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::total 23735.637216                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.blockedCycles::no_mshrs          312                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCycles::no_targets        13597                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCauses::no_mshrs           44                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.blockedCauses::no_targets          467                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.avgBlocked::no_mshrs     7.090909                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.avgBlocked::no_targets    29.115632                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.writebacks::writebacks        58875                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.writebacks::total        58875                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::processor.cores.core.data        17648                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::total        17648                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::processor.cores.core.data        17648                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::total        17648                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::processor.cores.core.data        59894                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::total        59894                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::processor.cores.core.data        59894                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::total        59894                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::processor.cores.core.data   1174567789                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::total   1174567789                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::processor.cores.core.data   1174567789                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::total   1174567789                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::processor.cores.core.data     0.000251                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::total     0.000251                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::processor.cores.core.data     0.000251                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::total     0.000251                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::processor.cores.core.data 19610.775520                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::total 19610.775520                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::processor.cores.core.data 19610.775520                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::total 19610.775520                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.replacements        58875                       # number of replacements (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::processor.cores.core.data    169016317                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::total    169016317                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::processor.cores.core.data        26353                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::total        26353                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::processor.cores.core.data    789035000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::total    789035000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::processor.cores.core.data    169042670                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::total    169042670                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::processor.cores.core.data     0.000156                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::total     0.000156                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::processor.cores.core.data 29940.993435                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::total 29940.993435                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::processor.cores.core.data        13666                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::total        13666                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::processor.cores.core.data        12687                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::total        12687                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::processor.cores.core.data    353391000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::total    353391000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.000075                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::total     0.000075                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 27854.575550                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::total 27854.575550                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.hits::processor.cores.core.data           22                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::total           22                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::processor.cores.core.data            5                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::total            5                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::processor.cores.core.data       226000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::total       226000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::processor.cores.core.data           27                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::total           27                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::processor.cores.core.data     0.185185                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::total     0.185185                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::processor.cores.core.data        45200                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::total        45200                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::processor.cores.core.data            5                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::total            5                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::processor.cores.core.data       216000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::total       216000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::processor.cores.core.data     0.185185                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::total     0.185185                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::processor.cores.core.data        43200                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::total        43200                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.hits::processor.cores.core.data            7                       # number of WriteLineReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.hits::total            7                       # number of WriteLineReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::processor.cores.core.data           90                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::total           90                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::processor.cores.core.data      3062972                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::total      3062972                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::processor.cores.core.data           97                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::total           97                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::processor.cores.core.data     0.927835                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::total     0.927835                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::processor.cores.core.data 34033.022222                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::total 34033.022222                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::processor.cores.core.data           90                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::total           90                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::processor.cores.core.data      2882972                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::total      2882972                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::processor.cores.core.data     0.927835                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::total     0.927835                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::processor.cores.core.data 32033.022222                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::total 32033.022222                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.hits::processor.cores.core.data     69807627                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.hits::total     69807627                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::processor.cores.core.data        51099                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::total        51099                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::processor.cores.core.data   1048410809                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::total   1048410809                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::processor.cores.core.data     69858726                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::total     69858726                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::processor.cores.core.data     0.000731                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::total     0.000731                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::processor.cores.core.data 20517.247089                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::total 20517.247089                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::processor.cores.core.data         3982                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::total         3982                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::processor.cores.core.data        47117                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::total        47117                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::processor.cores.core.data    818293817                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::total    818293817                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.000674                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::total     0.000674                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 17367.273320                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::total 17367.273320                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.tags.tagsInUse  1023.921942                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1dcaches.tags.totalRefs    238883872                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.sampledRefs        59899                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.avgRefs  3988.111187                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1dcaches.tags.warmupTick       294000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1dcaches.tags.occupancies::processor.cores.core.data  1023.921942                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::processor.cores.core.data     0.999924                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::total     0.999924                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1024         1024                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::0          110                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::1           12                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::2           67                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::3          308                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::4          527                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.tagAccesses    477862939                       # Number of tag accesses (Count)
board.cache_hierarchy.l1dcaches.tags.dataAccesses    477862939                       # Number of data accesses (Count)
board.cache_hierarchy.l1dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.demandHits::processor.cores.core.inst    225917838                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.demandHits::total    225917838                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.overallHits::processor.cores.core.inst    225917838                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.overallHits::total    225917838                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.demandMisses::processor.cores.core.inst         2214                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.demandMisses::total         2214                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::processor.cores.core.inst         2214                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::total         2214                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.demandMissLatency::processor.cores.core.inst    155170963                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMissLatency::total    155170963                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::processor.cores.core.inst    155170963                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::total    155170963                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandAccesses::processor.cores.core.inst    225920052                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandAccesses::total    225920052                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::processor.cores.core.inst    225920052                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::total    225920052                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandMissRate::processor.cores.core.inst     0.000010                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMissRate::total     0.000010                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::processor.cores.core.inst     0.000010                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::total     0.000010                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMissLatency::processor.cores.core.inst 70086.252484                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMissLatency::total 70086.252484                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::processor.cores.core.inst 70086.252484                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::total 70086.252484                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.blockedCycles::no_mshrs        19955                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCauses::no_mshrs          347                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.avgBlocked::no_mshrs    57.507205                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.writebacks::writebacks          844                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.writebacks::total          844                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::processor.cores.core.inst          419                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::total          419                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::processor.cores.core.inst          419                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::total          419                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::processor.cores.core.inst         1795                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::total         1795                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::processor.cores.core.inst         1795                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::total         1795                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::processor.cores.core.inst    131190982                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::total    131190982                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::processor.cores.core.inst    131190982                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::total    131190982                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissRate::processor.cores.core.inst     0.000008                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMshrMissRate::total     0.000008                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::processor.cores.core.inst     0.000008                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::total     0.000008                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::processor.cores.core.inst 73086.898050                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::total 73086.898050                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::processor.cores.core.inst 73086.898050                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::total 73086.898050                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.replacements          844                       # number of replacements (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::processor.cores.core.inst    225917838                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::total    225917838                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::processor.cores.core.inst         2214                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::total         2214                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::processor.cores.core.inst    155170963                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::total    155170963                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.accesses::processor.cores.core.inst    225920052                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.accesses::total    225920052                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.missRate::processor.cores.core.inst     0.000010                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.missRate::total     0.000010                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::processor.cores.core.inst 70086.252484                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::total 70086.252484                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::processor.cores.core.inst          419                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::total          419                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::processor.cores.core.inst         1795                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::total         1795                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::processor.cores.core.inst    131190982                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::total    131190982                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.000008                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::total     0.000008                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 73086.898050                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::total 73086.898050                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.tags.tagsInUse   921.889199                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1icaches.tags.totalRefs    225919632                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.sampledRefs         1794                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.avgRefs 125930.675585                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1icaches.tags.warmupTick        90000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1icaches.tags.occupancies::processor.cores.core.inst   921.889199                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::processor.cores.core.inst     0.900282                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::total     0.900282                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.occupanciesTaskId::1024          950                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::0           94                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::1           13                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::2            8                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::4          835                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ratioOccsTaskId::1024     0.927734                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1icaches.tags.tagAccesses    451841898                       # Number of tag accesses (Count)
board.cache_hierarchy.l1icaches.tags.dataAccesses    451841898                       # Number of data accesses (Count)
board.cache_hierarchy.l1icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2buses.transDist::ReadResp        14481                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::WritebackDirty        52705                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::WritebackClean        11433                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::CleanEvict          764                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::HardPFReq        24590                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadExReq        47083                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadExResp        47083                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadCleanReq         1795                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::ReadSharedReq        12687                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::InvalidateReq          129                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.transDist::InvalidateResp          129                       # Transaction distribution (Count)
board.cache_hierarchy.l2buses.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port         4433                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port       178673                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktCount::total       183106                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2buses.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port       168832                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2caches.cpu_side_port      7593280                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.pktSize::total      7762112                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2buses.snoops            29773                       # Total snoops (Count)
board.cache_hierarchy.l2buses.snoopTraffic       282816                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2buses.snoopFanout::samples        91467                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::mean     0.042529                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::stdev     0.201794                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::0        87577     95.75%     95.75% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::1         3890      4.25%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.snoopFanout::total        91467                       # Request fanout histogram (Count)
board.cache_hierarchy.l2buses.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2buses.reqLayer0.occupancy    240851000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.respLayer0.occupancy      5382999                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.respLayer1.occupancy    179439000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2buses.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2buses.snoop_filter.totRequests       121413                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitSingleRequests        59720                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitMultiRequests            3                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.totSnoops         3886                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitSingleSnoops         3886                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2buses.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2caches.demandHits::processor.cores.core.inst          289                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.demandHits::processor.cores.core.data        56988                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.demandHits::total        57277                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2caches.overallHits::processor.cores.core.inst          289                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.overallHits::processor.cores.core.data        56988                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.overallHits::total        57277                       # number of overall hits (Count)
board.cache_hierarchy.l2caches.demandMisses::processor.cores.core.inst         1506                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.demandMisses::processor.cores.core.data         2782                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.demandMisses::total         4288                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2caches.overallMisses::processor.cores.core.inst         1506                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.overallMisses::processor.cores.core.data         2782                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.overallMisses::total         4288                       # number of overall misses (Count)
board.cache_hierarchy.l2caches.demandMissLatency::processor.cores.core.inst    123748000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMissLatency::processor.cores.core.data    248164000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMissLatency::total    371912000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::processor.cores.core.inst    123748000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::processor.cores.core.data    248164000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMissLatency::total    371912000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2caches.demandAccesses::processor.cores.core.inst         1795                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandAccesses::processor.cores.core.data        59770                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandAccesses::total        61565                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::processor.cores.core.inst         1795                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::processor.cores.core.data        59770                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.overallAccesses::total        61565                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2caches.demandMissRate::processor.cores.core.inst     0.838997                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMissRate::processor.cores.core.data     0.046545                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMissRate::total     0.069650                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::processor.cores.core.inst     0.838997                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::processor.cores.core.data     0.046545                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMissRate::total     0.069650                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2caches.demandAvgMissLatency::processor.cores.core.inst 82169.986720                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMissLatency::processor.cores.core.data 89203.450755                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMissLatency::total 86733.208955                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::processor.cores.core.inst 82169.986720                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::processor.cores.core.data 89203.450755                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMissLatency::total 86733.208955                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2caches.writebacks::writebacks         4419                       # number of writebacks (Count)
board.cache_hierarchy.l2caches.writebacks::total         4419                       # number of writebacks (Count)
board.cache_hierarchy.l2caches.demandMshrHits::processor.cores.core.data           11                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2caches.demandMshrHits::total           11                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2caches.overallMshrHits::processor.cores.core.data           11                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2caches.overallMshrHits::total           11                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::processor.cores.core.inst         1506                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::processor.cores.core.data         2771                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMisses::total         4277                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::cache_hierarchy.l2caches.prefetcher        22283                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::processor.cores.core.inst         1506                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::processor.cores.core.data         2771                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.overallMshrMisses::total        26560                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2caches.demandMshrMissLatency::processor.cores.core.inst    105688000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissLatency::processor.cores.core.data    214178000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissLatency::total    319866000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::cache_hierarchy.l2caches.prefetcher   1283157548                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::processor.cores.core.inst    105688000                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::processor.cores.core.data    214178000                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.overallMshrMissLatency::total   1603023548                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.demandMshrMissRate::processor.cores.core.inst     0.838997                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMshrMissRate::processor.cores.core.data     0.046361                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.demandMshrMissRate::total     0.069471                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::cache_hierarchy.l2caches.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::processor.cores.core.inst     0.838997                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::processor.cores.core.data     0.046361                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.overallMshrMissRate::total     0.431414                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::processor.cores.core.inst 70177.954847                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::processor.cores.core.data 77292.674125                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.demandAvgMshrMissLatency::total 74787.467851                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::cache_hierarchy.l2caches.prefetcher 57584.595791                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::processor.cores.core.inst 70177.954847                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::processor.cores.core.data 77292.674125                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.overallAvgMshrMissLatency::total 60354.802259                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.replacements         5183                       # number of replacements (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMisses::cache_hierarchy.l2caches.prefetcher        22283                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMisses::total        22283                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissLatency::cache_hierarchy.l2caches.prefetcher   1283157548                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissLatency::total   1283157548                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissRate::cache_hierarchy.l2caches.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2caches.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2caches.HardPFReq.avgMshrMissLatency::cache_hierarchy.l2caches.prefetcher 57584.595791                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.HardPFReq.avgMshrMissLatency::total 57584.595791                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.hits::processor.cores.core.data           24                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2caches.InvalidateReq.hits::total           24                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2caches.InvalidateReq.misses::processor.cores.core.data          105                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.misses::total          105                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.accesses::processor.cores.core.data          129                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.InvalidateReq.accesses::total          129                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.InvalidateReq.missRate::processor.cores.core.data     0.813953                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.missRate::total     0.813953                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMisses::processor.cores.core.data          105                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMisses::total          105                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissLatency::processor.cores.core.data      2205000                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissLatency::total      2205000                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissRate::processor.cores.core.data     0.813953                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.mshrMissRate::total     0.813953                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2caches.InvalidateReq.avgMshrMissLatency::processor.cores.core.data        21000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.InvalidateReq.avgMshrMissLatency::total        21000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.hits::processor.cores.core.inst          289                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.hits::total          289                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.misses::processor.cores.core.inst         1506                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.misses::total         1506                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.missLatency::processor.cores.core.inst    123748000                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.missLatency::total    123748000                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.accesses::processor.cores.core.inst         1795                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.accesses::total         1795                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.missRate::processor.cores.core.inst     0.838997                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.missRate::total     0.838997                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.avgMissLatency::processor.cores.core.inst 82169.986720                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.avgMissLatency::total 82169.986720                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMisses::processor.cores.core.inst         1506                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMisses::total         1506                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissLatency::processor.cores.core.inst    105688000                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissLatency::total    105688000                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissRate::processor.cores.core.inst     0.838997                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.mshrMissRate::total     0.838997                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadCleanReq.avgMshrMissLatency::processor.cores.core.inst 70177.954847                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadCleanReq.avgMshrMissLatency::total 70177.954847                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.hits::processor.cores.core.data        46350                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.hits::total        46350                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.misses::processor.cores.core.data          733                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.misses::total          733                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.missLatency::processor.cores.core.data     72563000                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.missLatency::total     72563000                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.accesses::processor.cores.core.data        47083                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadExReq.accesses::total        47083                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadExReq.missRate::processor.cores.core.data     0.015568                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.missRate::total     0.015568                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.avgMissLatency::processor.cores.core.data 98994.542974                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.avgMissLatency::total 98994.542974                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.mshrHits::processor.cores.core.data            3                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrHits::total            3                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMisses::processor.cores.core.data          730                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMisses::total          730                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissLatency::processor.cores.core.data     63643000                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissLatency::total     63643000                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissRate::processor.cores.core.data     0.015505                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.mshrMissRate::total     0.015505                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadExReq.avgMshrMissLatency::processor.cores.core.data 87182.191781                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadExReq.avgMshrMissLatency::total 87182.191781                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.hits::processor.cores.core.data        10638                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.hits::total        10638                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.misses::processor.cores.core.data         2049                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.misses::total         2049                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.missLatency::processor.cores.core.data    175601000                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.missLatency::total    175601000                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.accesses::processor.cores.core.data        12687                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.accesses::total        12687                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.missRate::processor.cores.core.data     0.161504                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.missRate::total     0.161504                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.avgMissLatency::processor.cores.core.data 85700.829673                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.avgMissLatency::total 85700.829673                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.mshrHits::processor.cores.core.data            8                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrHits::total            8                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMisses::processor.cores.core.data         2041                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMisses::total         2041                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissLatency::processor.cores.core.data    150535000                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissLatency::total    150535000                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.160873                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.mshrMissRate::total     0.160873                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2caches.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 73755.512004                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.ReadSharedReq.avgMshrMissLatency::total 73755.512004                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2caches.WritebackClean.hits::writebacks        11430                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2caches.WritebackClean.hits::total        11430                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2caches.WritebackClean.accesses::writebacks        11430                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackClean.accesses::total        11430                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackDirty.hits::writebacks        48286                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2caches.WritebackDirty.hits::total        48286                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2caches.WritebackDirty.accesses::writebacks        48286                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.WritebackDirty.accesses::total        48286                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2caches.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2caches.prefetcher.demandMshrMisses         4277                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2caches.prefetcher.pfIssued       356456                       # number of hwpf issued (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUnused        18325                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2caches.prefetcher.accuracy            0                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2caches.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInCache       334011                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInMSHR          162                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2caches.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2caches.prefetcher.pfLate       334173                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2caches.prefetcher.pfIdentified       356465                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2caches.prefetcher.pfBufferHit            9                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2caches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2caches.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2caches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2caches.prefetcher.pfSpanPage        30223                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2caches.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2caches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2caches.tags.tagsInUse 13646.835140                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2caches.tags.totalRefs       135414                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2caches.tags.sampledRefs        78113                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2caches.tags.avgRefs     1.733565                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2caches.tags.warmupTick      1057000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2caches.tags.occupancies::writebacks 13575.837243                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2caches.tags.occupancies::cache_hierarchy.l2caches.prefetcher    70.997897                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::writebacks     0.828603                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::cache_hierarchy.l2caches.prefetcher     0.004333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.avgOccs::total     0.832937                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2caches.tags.occupanciesTaskId::1022           61                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2caches.tags.occupanciesTaskId::1024        15557                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1022::4           61                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::0          190                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::1           16                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::2           83                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::3          375                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ageTaskId_1024::4        14893                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2caches.tags.ratioOccsTaskId::1022     0.003723                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2caches.tags.ratioOccsTaskId::1024     0.949524                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2caches.tags.tagAccesses      2020673                       # Number of tag accesses (Count)
board.cache_hierarchy.l2caches.tags.dataAccesses      2020673                       # Number of data accesses (Count)
board.cache_hierarchy.l2caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp        21943                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty         4419                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::CleanEvict          764                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq          730                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp          730                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadCleanReq        21944                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::InvalidateReq          105                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2caches.mem_side_port::board.memory.mem_ctrl.port        50635                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2caches.mem_side_port::total        50635                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total        50635                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2caches.mem_side_port::board.memory.mem_ctrl.port      1733888                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2caches.mem_side_port::total      1733888                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      1733888                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        22779                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        22779    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        22779                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     48014231                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy     55877809                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests        27962                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests         5187                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                           1000                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples      4419.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l2caches.prefetcher::samples     18372.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples      1506.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples      2766.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.383092362750                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds          240                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds          240                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState         318070                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState          4159                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  22674                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  4419                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                22674                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                4419                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                30                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.10                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 18.94                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            22674                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6            4419                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              18999                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1               1155                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                504                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                375                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                338                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                323                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                316                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                304                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                302                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                 15                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                11                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15               235                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16               236                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17               241                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18               242                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19               243                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20               245                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21               243                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               242                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23               247                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24               247                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25               248                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26               243                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27               244                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28               252                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29               266                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30               250                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31               240                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32               240                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples          240                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean    94.112500                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  1017.708271                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-511          239     99.58%     99.58% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::15360-15871            1      0.42%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total          240                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples          240                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    18.300000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    18.268670                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     1.132258                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            5      2.08%      2.08% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::17            1      0.42%      2.50% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::18          203     84.58%     87.08% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::19           11      4.58%     91.67% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::20            6      2.50%     94.17% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::21            5      2.08%     96.25% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::22            1      0.42%     96.67% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::23            7      2.92%     99.58% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::24            1      0.42%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total          240                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ               1920                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            1451136                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys          282816                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1380735.12442102                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         269095.37420907                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap             1050987944000                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap              38791862.99                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l2caches.prefetcher      1175808                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst        96384                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data       177024                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks       281088                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l2caches.prefetcher 1118764.474987337599                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 91707.995826852304                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 168435.801100314391                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 267451.206953210698                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l2caches.prefetcher        18397                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst         1506                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data         2771                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks         4419                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l2caches.prefetcher    704533755                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst     40498251                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data     93998935                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks 18690642996750                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l2caches.prefetcher     38296.12                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     26891.27                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     33922.39                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks 4229609186.86                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l2caches.prefetcher      1177408                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst        96320                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data       177344                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      1451072                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst        96320                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        96320                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::writebacks       282816                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total       282816                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l2caches.prefetcher        18397                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst         1505                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data         2771                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        22673                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::writebacks         4419                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total         4419                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l2caches.prefetcher      1120287                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst        91647                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data       168740                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total      1380674                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst        91647                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total        91647                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::writebacks       269095                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total       269095                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::writebacks       269095                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l2caches.prefetcher      1120287                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst        91647                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data       168740                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total      1649770                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           22644                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts           4392                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1661                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1473                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1388                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3         1351                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4         1313                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5         1321                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6         1446                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7         1487                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8         1582                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         1350                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10         1386                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11         1360                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         1285                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13         1362                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14         1405                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1474                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          439                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          242                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2          274                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          210                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          207                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          248                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6          309                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7          324                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8          381                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9          192                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10          212                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11          215                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12          204                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13          238                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14          347                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15          350                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          414455941                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        113220000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat     839030941                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           18303.12                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      37053.12                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits           5639                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits          1910                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        24.90                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        43.49                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples        19476                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean    88.718012                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean    73.649731                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   102.696220                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127        17332     88.99%     88.99% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255         1293      6.64%     95.63% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          315      1.62%     97.25% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           84      0.43%     97.68% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          313      1.61%     99.29% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767           30      0.15%     99.44% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           19      0.10%     99.54% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023           11      0.06%     99.59% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           79      0.41%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total        19476                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead      1449216                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten       281088                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW           1.378908                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           0.267451                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.01                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.01                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          27.92                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy     69243720                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy     36773550                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     81681600                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy     11760660                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 82963492560.000015                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy  29334358590                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy 378876761280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy 491374071960                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   467.535393                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE 984684831348                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF  35094540000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT  31208594652                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     69893460                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     37137870                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy     79996560                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy     11165580                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 82963492560.000015                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy  29944402230                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy 378363040320                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy 491469128580                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   467.625838                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE 983341789269                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF  35094540000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT  32551636731                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles       1050987967                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.694766                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.590052                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded       642922185                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded          256                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued      637141555                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued       499456                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined     10596658                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined     17296994                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved          125                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples   1050927930                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.606266                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.850667                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0    614964728     58.52%     58.52% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1    281611003     26.80%     85.31% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2    114317782     10.88%     96.19% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3     33257688      3.16%     99.36% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4      6761721      0.64%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5        15008      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total   1050927930                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu      8448034     17.51%     17.51% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult        15187      0.03%     17.54% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     17.54% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd        38387      0.08%     17.62% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     17.62% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt         1628      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            5      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc          308      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     17.63% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead     32856668     68.11%     85.73% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite      6882159     14.27%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatArith            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatConvert            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorFloatReduce            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorIntegerExtension            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::VectorConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass          257      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu    186605988     29.29%     29.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult      1682982      0.26%     29.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv        30930      0.00%     29.56% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd     62469197      9.80%     39.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp       799768      0.13%     39.49% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt     34260348      5.38%     44.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult     74885901     11.75%     56.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc      2462929      0.39%     57.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv       179487      0.03%     57.03% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc     21683669      3.40%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            2      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu          129      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp          318      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt        65404      0.01%     60.45% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc      4279027      0.67%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift           80      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     61.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead    177802766     27.91%     89.02% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite     69932373     10.98%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatArith            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorMisc            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::VectorConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total    637141555                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.606231                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy            48242376                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.075717                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads   1599000451                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites    274323304                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses    259222385                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads            0                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites            0                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses            0                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads    774952421                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites    379196494                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses    374814265                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses    286586006                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses            0                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses    398797668                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts      1474503                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled            1196                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           60037                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads    178769385                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     70031727                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads       993882                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores          849                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return     21501408     20.99%     20.99% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect     21537534     21.03%     42.02% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect          300      0.00%     42.02% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond     47456490     46.34%     88.36% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond     11200945     10.94%     99.30% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     99.30% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond       717561      0.70%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total    102414238                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return      1823633     12.03%     12.03% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect      1859860     12.27%     24.29% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect          194      0.00%     24.30% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond      9578263     63.17%     87.47% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond      1770948     11.68%     99.15% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     99.15% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond       129403      0.85%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total     15162301                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return           14      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect         1190      0.06%      0.06% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect           83      0.00%      0.07% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond      1884035     99.84%     99.91% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond          883      0.05%     99.95% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     99.95% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond          884      0.05%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total      1887089                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return     19677775     22.55%     22.55% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect     19677674     22.55%     45.11% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect          106      0.00%     45.11% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond     37878227     43.41%     88.52% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond      9429997     10.81%     99.33% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     99.33% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond       588158      0.67%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total     87251937                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect          849      0.05%      0.05% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect           78      0.00%      0.05% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond      1861876     99.87%     99.92% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond          695      0.04%     99.96% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     99.96% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond          795      0.04%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total      1864293                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget     34503291     33.69%     33.69% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB     45702391     44.63%     78.31% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS     21501408     20.99%     99.31% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect       707148      0.69%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total    102414238                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch      1735876     91.99%     91.99% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return       151191      8.01%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect           14      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            8      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total      1887089                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted     47456490                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken     12969062                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect      1887089                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss         2430                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted      1735898                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted       151191                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups    102414238                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates      1734917                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits     66952636                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.653743                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted         3346                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups       717861                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits       707148                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses        10713                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return     21501408     20.99%     20.99% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect     21537534     21.03%     42.02% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect          300      0.00%     42.02% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond     47456490     46.34%     88.36% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond     11200945     10.94%     99.30% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     99.30% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond       717561      0.70%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total    102414238                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return     21501408     60.63%     60.63% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect         2415      0.01%     60.64% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect          300      0.00%     60.64% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond     13238460     37.33%     97.97% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond         1458      0.00%     97.98% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     97.98% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond       717561      2.02%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total     35461602                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect         1190      0.07%      0.07% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      0.07% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond      1732844     99.88%     99.95% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond          883      0.05%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total      1734917                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect         1190      0.07%      0.07% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      0.07% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond      1732844     99.88%     99.95% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond          883      0.05%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total      1734917                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups       717861                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits       707148                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses        10713                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords          967                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords       718828                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            1                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes     23361467                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops     23361462                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes      3683687                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used     19677775                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct     19677775                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect            0                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts      9044423                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls          131                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts      1885150                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples   1048929153                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.602854                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.118895                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0    699783366     66.71%     66.71% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1    204443638     19.49%     86.20% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2     68868792      6.57%     92.77% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3     41898785      3.99%     96.76% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4     18835821      1.80%     98.56% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5      4458581      0.43%     98.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6      8916246      0.85%     99.84% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7       450976      0.04%     99.88% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8      1272948      0.12%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total   1048929153                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           71                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls     19677780                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass           79      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu    185504311     29.34%     29.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult      1662531      0.26%     29.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv        30871      0.00%     29.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd     62410010      9.87%     39.47% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp       780370      0.12%     39.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt     34180682      5.41%     45.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult     74785786     11.83%     56.83% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc      2462929      0.39%     57.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv       177145      0.03%     57.25% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc     21463155      3.39%     60.64% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     60.64% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            1      0.00%     60.64% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     60.64% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu           97      0.00%     60.64% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp          262      0.00%     60.64% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt        58523      0.01%     60.65% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc      4238924      0.67%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift           73      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     61.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead    174737114     27.63%     88.95% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite     69858795     11.05%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorMisc            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::VectorConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total    632351658                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples      1272948                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts    620137388                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps    632351658                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP    620111512                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP    632325782                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.694766                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.590052                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs    244595909                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts    392529206                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts    174737114                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     69858768                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts    374305256                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass           79      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu    185504311     29.34%     29.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult      1662531      0.26%     29.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv        30871      0.00%     29.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd     62410010      9.87%     39.47% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp       780370      0.12%     39.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt     34180682      5.41%     45.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult     74785786     11.83%     56.83% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc      2462929      0.39%     57.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv       177145      0.03%     57.25% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc     21463155      3.39%     60.64% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     60.64% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            1      0.00%     60.64% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     60.64% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu           97      0.00%     60.64% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp          262      0.00%     60.64% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt        58523      0.01%     60.65% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc      4238924      0.67%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift           73      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     61.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead    174737114     27.63%     88.95% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite     69858795     11.05%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total    632351658                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl     87251937                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl     66985898                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl     20266039                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl     37878227                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl     49373710                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall     19677780                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn     19677775                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles     79048827                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles    743881828                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles    112918676                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles    113192257                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles      1886342                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved     41556589                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred         2159                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts    655593458                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts      9512242                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts    635667052                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop        28146                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches     87485378                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts    176805138                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     69919921                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.604828                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads    110569350                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites    111269615                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads    404881820                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites    147707293                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs    246725059                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads    988462481                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites    175151245                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecPredRegReads          340                       # Number of times the predicate registers were read (Count)
board.processor.cores.core.executeStats0.numVecPredRegWrites          117                       # Number of times the predicate registers were written (Count)
board.processor.cores.core.executeStats0.numVecRegReads    383408479                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numVecRegWrites    321941855                       # Number of times the vector registers were written (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches     67910947                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles    1047137981                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles      3776830                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles          686                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles         1992                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.icacheWaitRetryStallCycles         1271                       # Number of stall cycles due to full MSHR (Cycle)
board.processor.cores.core.fetch.cacheLines    225920064                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         1039                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples   1050927930                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.681937                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     1.110696                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0    702938228     66.89%     66.89% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1    144898987     13.79%     80.68% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2     37504310      3.57%     84.24% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3    165586405     15.76%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            3                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total   1050927930                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts    703156298                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.669043                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches    102414238                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.097446                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles      1897585                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles      1886342                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles       138591                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles          705                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts    642950587                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts    178769385                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     70031727                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts          250                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents          161                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents          438                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          699                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect       153547                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect      1736082                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts      1889629                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit    634042333                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount    634036650                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst    311030480                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst    417826420                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.603277                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.744401                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads      7757879                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads      4032271                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses         3301                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          699                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores       172932                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads         3724                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache          462                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples    174737114                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     3.959845                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     0.529234                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9    174714253     99.99%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19         6428      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29        11430      0.01%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39          165      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49           75      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59          259      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69          236      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79         1046      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89         1812      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99          832      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109          349      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119           98      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129           27      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139           16      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149           16      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179            4      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189            2      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199            3      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249            2      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279            3      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289            8      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299            3      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows           41      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          424                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total    174737114                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.alignFaults            0                       # Number of MMU faults due to alignment restrictions (Count)
board.processor.cores.core.mmu.prefetchFaults            0                       # Number of MMU faults due to prefetch (Count)
board.processor.cores.core.mmu.domainFaults            0                       # Number of MMU faults due to domain restrictions (Count)
board.processor.cores.core.mmu.permsFaults            0                       # Number of MMU faults due to permissions restrictions (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.dtb.flushTlb           16                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.itb.flushTlb           16                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.l2_shared.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.l2_shared.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.l2_shared.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.l2_shared.flushTlb           16                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.l2_shared.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.l2_shared.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.l2_shared.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.l2_shared.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.l2_shared.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.readHits            0                       # Read hits (Count)
board.processor.cores.core.mmu.stage2_dtb.readMisses            0                       # Read misses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeHits            0                       # Write hits (Count)
board.processor.cores.core.mmu.stage2_dtb.writeMisses            0                       # Write misses (Count)
board.processor.cores.core.mmu.stage2_dtb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.flushTlb           16                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_dtb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_dtb.readAccesses            0                       # Read accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.writeAccesses            0                       # Write accesses (Count)
board.processor.cores.core.mmu.stage2_dtb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_dtb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_dtb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_dtb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.stage2_itb.instHits            0                       # Inst hits (Count)
board.processor.cores.core.mmu.stage2_itb.instMisses            0                       # Inst misses (Count)
board.processor.cores.core.mmu.stage2_itb.inserts            0                       # Number of times an entry is inserted into the TLB (Count)
board.processor.cores.core.mmu.stage2_itb.flushTlb           16                       # Number of times a TLB invalidation was requested (Count)
board.processor.cores.core.mmu.stage2_itb.flushedEntries            0                       # Number of entries that have been flushed from TLB (Count)
board.processor.cores.core.mmu.stage2_itb.instAccesses            0                       # Inst accesses (Count)
board.processor.cores.core.mmu.stage2_itb.hits            0                       # Total TLB (inst and data) hits (Count)
board.processor.cores.core.mmu.stage2_itb.misses            0                       # Total TLB (inst and data) misses (Count)
board.processor.cores.core.mmu.stage2_itb.accesses            0                       # Total TLB (inst and data) accesses (Count)
board.processor.cores.core.mmu.stage2_itb_walker.walks            0                       # Table walker walks requested (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Requested::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Data            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::Inst            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin_Completed::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.requestOrigin::total            0                       # Table walker requests started/completed, data/inst (Count)
board.processor.cores.core.mmu.stage2_itb_walker.power_state.pwrStateResidencyTicks::UNDEFINED 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 1050987966000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles      1886342                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles    140311478                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles    569958056                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles      2927266                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles    134928371                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles    200916417                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts    644073121                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.squashedInsts      4691658                       # Number of squashed instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents        19762                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents        12517                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.LQFullEvents         2475                       # Number of times rename has blocked due to LQ full (Count)
board.processor.cores.core.rename.SQFullEvents       168669                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.fullRegistersEvents    151093376                       # Number of times there has been no free registers (Count)
board.processor.cores.core.rename.renamedOperands    800122333                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups   1855417727                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups    410956256                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.vecLookups    385435533                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.vecPredLookups          260                       # Number of vector predicate rename lookups (Count)
board.processor.cores.core.rename.committedMaps    784042831                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps     16079502                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing       288074                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing          116                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts    300514597                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads       1689045825                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes      1284791082                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts    620111512                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps    632325782                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls           70                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
